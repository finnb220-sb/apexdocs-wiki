name: Promote to SIT
run-name: Promote to SIT
on:
  push:
    branches:
      - release/*
      - "!release/DAS"      # exclude this branch
jobs:
  # This job is delegated to the ENV-Determine-deployment-env.yml file.
  DetermineSFDeploymentEnvironment:
    uses: ./.github/workflows/ENV-Determine-deployment-env.yml
    secrets: inherit
    with:
      original_event: ${{ github.event_name }}
  deploy2sit:
    needs: DetermineSFDeploymentEnvironment
    name: SIT Deployment
    runs-on: ubuntu-latest
    env:
      AUTH_SECRET_NAME: ${{ needs.DetermineSFDeploymentEnvironment.outputs.AUTH_SECRET_NAME }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4.0.3
        with:
          node-version: 18
      - name: write Authfile
        env:
          AUTH_SECRET_VALUE: ${{ secrets[env.AUTH_SECRET_NAME] }}
        run: |
          echo "Using $AUTH_SECRET_NAME as the Secret Name"
          if [ -z "$AUTH_SECRET_VALUE" ]; then
            echo "GitHub secret ${AUTH_SECRET_NAME} is empty or not set. Exiting..."
            exit 1
          else
            echo "GitHub secret ${AUTH_SECRET_NAME} was found. Writing to auth.txt."
            echo "${AUTH_SECRET_VALUE}" > auth.txt
          fi
      - name: Install sfdx & sf Executable
        run: |
          npm install @salesforce/cli --global
          echo y | sfdx plugins:install sfdx-git-delta
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Auth with SIT
        run: 'sfdx force:auth:sfdxurl:store -f auth.txt -a sit -d'
      - name: Deploy to SIT
        run: |
          sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output "."
          sf project deploy start --verbose --wait 45 -x package/package.xml --target-org sit --ignore-conflicts
