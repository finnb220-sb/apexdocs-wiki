<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Invoking the DAS Create Addendum and Sign Apex Action.</description>
        <name>Create_Addendum_And_Sign_Action</name>
        <label>Create Addendum And Sign Action</label>
        <locationX>627</locationX>
        <locationY>134</locationY>
        <actionName>VCC_DASFlowCreateAddendumAndSign</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Assignments_After_Create_Addendum_and_Sign</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Set_Create_Addendum_and_Sign_Fault_Message</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>esig</name>
            <value>
                <elementReference>patientAndProviderParams.eSig</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>itemId</name>
            <value>
                <elementReference>noteAndEncounterParams.itemId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>providerName</name>
            <value>
                <elementReference>patientAndProviderParams.providerName</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>providerUserId</name>
            <value>
                <elementReference>patientAndProviderParams.providerUserId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>siteCode</name>
            <value>
                <elementReference>patientAndProviderParams.providerLoginSiteCode</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>type</name>
            <value>
                <elementReference>noteAndEncounterParams.noteAndEncounterNoteTitleIen</elementReference>
            </value>
        </inputParameters>
        <nameSegment>VCC_DASFlowCreateAddendumAndSign</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>61.0</apiVersion>
    <assignments>
        <description>Assigning the variable based on the output from the Create Addendum and Sign</description>
        <name>Assignments_After_Create_Addendum_and_Sign</name>
        <label>Assignments After Create Addendum and Sign</label>
        <locationX>627</locationX>
        <locationY>242</locationY>
        <assignmentItems>
            <assignToReference>systemModifiedOutputToVista</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Create_Addendum_And_Sign_Action.systemModifiedOutputToVista</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>errorCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Create_Addendum_And_Sign_Action.errorCode</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>noteOrAddendumIen</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Create_Addendum_And_Sign_Action.noteOrAddendumIen</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>errorDescription</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Create_Addendum_And_Sign_Action.errorDescription</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>What_Was_the_Result_of_the_Create_Addendum_and_Sign</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Setting the output variable isInvalidEsig boolean to true to be used back in the main DAS sign note flow.</description>
        <name>Copy_1_of_Set_Invalid_Esig_Variable_to_True</name>
        <label>Set Invalid Esig Variable to True</label>
        <locationX>314</locationX>
        <locationY>890</locationY>
        <assignmentItems>
            <assignToReference>faultFlag_RevalidateEsig</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Setting the fault information to variables to be used in the main sign note flow.</description>
        <name>Set_Create_Addendum_and_Sign_Fault_Message</name>
        <label>Set Create Addendum and Sign Fault Message</label>
        <locationX>1194</locationX>
        <locationY>242</locationY>
        <assignmentItems>
            <assignToReference>faultMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>faultFlag_DisplayFlowError</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Setting faultFlag_ResumeConsolidatedEndpoint to true because we need to launch the VCC DAS Resume Consolidated Endpoint subflow from the main DAS Sign note flow in order to handle the errors.</description>
        <name>Set_faultFlag_ResumeConsolidatedEndpoint</name>
        <label>Set faultFlag_ResumeConsolidatedEndpoint</label>
        <locationX>50</locationX>
        <locationY>674</locationY>
        <assignmentItems>
            <assignToReference>faultFlag_ResumeConsolidatedEndpoint</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Setting the faultMessage with the result of the apex invocable and setting the faultFlag_DisplayFlowError to true because we need to display the flow error to the user from the main sign note flow.</description>
        <name>Set_faultMessage_and_faultFlag_DisplayFlowError</name>
        <label>Set faultMessage and faultFlag_DisplayFlowError</label>
        <locationX>600</locationX>
        <locationY>1274</locationY>
        <assignmentItems>
            <assignToReference>faultMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>errorDescription</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>faultFlag_DisplayFlowError</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Setting the faultOccurred variable to false since the action was Successful.</description>
        <name>Set_faultOccurred_to_false</name>
        <label>Set faultOccurred to &apos;false&apos;</label>
        <locationX>930</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>faultOccurred</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <description>Checking if an error code exists in the invocable result.</description>
        <name>Does_Flow_Invocable_Result_Have_an_Error_Code</name>
        <label>Does Flow Invocable Result Have an Error Code?</label>
        <locationX>600</locationX>
        <locationY>674</locationY>
        <defaultConnector>
            <targetReference>Set_faultMessage_and_faultFlag_DisplayFlowError</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_HasError</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Create_Addendum_And_Sign_Action.errorCode</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Create_Addendum_And_Sign_Action.errorCode</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>What_Now</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checking if the IEN is present in the invocable result.</description>
        <name>Does_Flow_Invocable_Result_Have_an_IEN</name>
        <label>Does Flow Invocable Result Have an IEN</label>
        <locationX>325</locationX>
        <locationY>566</locationY>
        <defaultConnector>
            <targetReference>Does_Flow_Invocable_Result_Have_an_Error_Code</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Create_Addendum_And_Sign_Action.noteOrAddendumIen</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Create_Addendum_And_Sign_Action.noteOrAddendumIen</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_faultFlag_ResumeConsolidatedEndpoint</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checking the error code so we know what action to take.</description>
        <name>What_Now</name>
        <label>What Now?</label>
        <locationX>446</locationX>
        <locationY>782</locationY>
        <defaultConnector>
            <targetReference>Set_faultMessage_and_faultFlag_DisplayFlowError</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Other</defaultConnectorLabel>
        <rules>
            <name>Re_validate_e_Sig</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Create_Addendum_And_Sign_Action.errorCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1300</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Set_Invalid_Esig_Variable_to_True</targetReference>
            </connector>
            <label>Re-validate e-Sig</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checking if the apex invocable was a success or if an error occurred.</description>
        <name>What_Was_the_Result_of_the_Create_Addendum_and_Sign</name>
        <label>What Was the Result of the Create Addendum and Sign?</label>
        <locationX>627</locationX>
        <locationY>350</locationY>
        <defaultConnector>
            <targetReference>Set_faultOccurred_to_false</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Success</defaultConnectorLabel>
        <rules>
            <name>Error</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Create_Addendum_And_Sign_Action.isError</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Updating_DAS_Last_Error_Code_Field_on_the_Addendum_Record</targetReference>
            </connector>
            <label>Error</label>
        </rules>
    </decisions>
    <description>1.14 - CCCM-32627 - Subflow of the DAS Sign Note Flow used to Create Addendum and Sign
1.15 - CCCM-32627 - Updated faultMessage to include the error message and the error description
1.16 - CCCM-32627 - Removed problematic Apex Defined variable and instead used simple variables, added descriptions
1.17.1 - CCCM-41413 - Removed retry logic</description>
    <environments>Default</environments>
    <interviewLabel>VCC Sign Note Subflow: DAS Create Addendum And Sign {!$Flow.CurrentDateTime}</interviewLabel>
    <label>VCC Sign Note Subflow: DAS Create Addendum And Sign</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordUpdates>
        <description>Updating the DAS Last Error Code field on the Addendum record so we can reference that field in the Resume Consolidated Endpoint flow.</description>
        <name>Updating_DAS_Last_Error_Code_Field_on_the_Addendum_Record</name>
        <label>Updating DAS Last Error Code Field on the Addendum Record</label>
        <locationX>325</locationX>
        <locationY>458</locationY>
        <connector>
            <targetReference>Does_Flow_Invocable_Result_Have_an_IEN</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varAddendumRecord.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>VCC_DasLastErrorCode__c</field>
            <value>
                <elementReference>errorCode</elementReference>
            </value>
        </inputAssignments>
        <object>VCC_Addendum__c</object>
    </recordUpdates>
    <start>
        <locationX>501</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Create_Addendum_And_Sign_Action</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <description>Stores the error code from the DAS Api call</description>
        <name>errorCode</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Variable storing the error description</description>
        <name>errorDescription</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Set to true when a fault occurs that is not recoverable, and the parent flow should just display the error message stored in output variable &apos;faultMessage&apos;. If in the future there is a (previously unidentified) scenario where we can recover, this flow should be updated to add a new output variable with the naming convention &apos;faultFlag_WhatToDo&apos;.</description>
        <name>faultFlag_DisplayFlowError</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Set to true when a fault occurs that requires error handling, and the parent flow should call the subflow VCC DAS Resume Consolidated Endpoints.</description>
        <name>faultFlag_ResumeConsolidatedEndpoint</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Boolean that equals true if the esignature was invalid.</description>
        <name>faultFlag_RevalidateEsig</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>The message from the fault to be used in the main sign note flow to display the error to the user.</description>
        <name>faultMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Boolean equals true if a fault occurred</description>
        <name>faultOccurred</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>true</booleanValue>
        </value>
    </variables>
    <variables>
        <description>The note and encounter parameters from the apex class VCC_Vdif_NoteAndEncounterParams</description>
        <name>noteAndEncounterParams</name>
        <apexClass>VCC_Vdif_NoteAndEncounterParams</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the IEN</description>
        <name>noteOrAddendumIen</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>The patient and provider parameters from the apex class VCC_Vdif_PatientAndProviderParams</description>
        <name>patientAndProviderParams</name>
        <apexClass>VCC_Vdif_PatientAndProviderParams</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the record Id of the Addendum.</description>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>A variable that counts how many retries we have attempted, so we can stop after the amount of retries we want.</description>
        <name>retryCounter</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <description>Is true if user input was modified during the process of sending the note to VistA (via DIP/VDIF).</description>
        <name>systemModifiedOutputToVista</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Variable storing the Addendum record</description>
        <name>varAddendumRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>VCC_Addendum__c</objectType>
    </variables>
</Flow>
