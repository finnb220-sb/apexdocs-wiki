name: Assign Reviewers
# This workflow is triggered on pull requests, whenever a request is opened, reopened or ready for review.
# The majority of this logic is in the ReviewerAssignment.ts file, which is compiled to a mjs file in the steps below.
# Typescript gives us a lot of type safety and allows us to write more maintainable code, but needs to be compiled to run in the github actions environment.
# The 'Compile Typescript' step uses bun to compile the typescript file to a mjs file, which is then imported and run in the 'Assign Reviewers' step.
# Please see the <root>./github/workflows/lib/ReviewerAssignment.ts file for the main logic of this action.
on:
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize]
  workflow_dispatch:

jobs:
  assign-code-reviewers:
    runs-on: ubuntu-latest
    if: ${{ github.event.action != 'synchronize' || (github.event.action == 'synchronize' && vars.TESTING_WF_ACTION == 'true') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Compile Typescript
        run: |
          bun build --target node .github/workflows/lib/ReviewerAssignment.ts --outfile .github/workflows/lib/ReviewerAssignment.mjs --format esm

      - uses: actions/github-script@v7
        continue-on-error: true
        env:
          CODE_REVIEWING_TEAM_NAME: ${{ vars.CODE_REVIEWING_TEAM_NAME }}
          VA_TEAMS_LIST_CSV: ${{ vars.VA_TEAMS_LIST_CSV }}
          PRIMARY_REVIEWER_MAPPING_JSON: ${{ vars.PRIMARY_REVIEWER_MAPPING_JSON }}
          UNASSIGNABLE_REVIEWERS_CSV: ${{ vars.UNASSIGNABLE_REVIEWERS_CSV }}
          SOLUTION_ARCHITECT_TEAM_MAPPING_JSON: ${{ vars.SOLUTION_ARCHITECT_TEAM_MAPPING_JSON }}
          VACH_TEAM_ASSIGNMENT_JSON: ${{ vars.VAHC_TEAM_ASSIGNMENTS }}
        name: Assign Reviewers
        id: exec
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const path = require('path')
            const file = '.github/workflows/lib/ReviewerAssignment.mjs'
            
            // This object defines the action configuration for this action
            const actionConfig = {
              primaryReviewerTeamName: process.env.CODE_REVIEWING_TEAM_NAME,
              fullTeamsList: process.env.VA_TEAMS_LIST_CSV,
              primaryReviewerMapping: process.env.PRIMARY_REVIEWER_MAPPING_JSON,
              temporarilyUnassignableUsersCsv: process.env.UNASSIGNABLE_REVIEWERS_CSV,
              solutionArchitectTeamMapping: process.env.SOLUTION_ARCHITECT_TEAM_MAPPING_JSON,
              vahcTeamMapping: process.env.VACH_TEAM_ASSIGNMENT_JSON
            };
            
            console.log('actionConfig', actionConfig);
            
            // Import the module (ts file) and run the run method
            const reviewerAssignment = await import('${{ github.workspace }}/.github/workflows/lib/ReviewerAssignment.mjs');
            
            if (reviewerAssignment) {
              const ReviewerAssignmentDefault = reviewerAssignment.default;
              const vladTheAssigner = new ReviewerAssignmentDefault(github, context, actionConfig);
              return await vladTheAssigner.assignReviewers();
            } else {
              throw new Error('The module could not be loaded, or does not have a run method')
            }