<?xml version="1.0" encoding="UTF-8" ?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Uses a provided Location&apos;s VISN to retrieve Tele-EC Escalation Status for the high acuity queue</description>
        <name>Get_Status_for_High_Acuity</name>
        <label>Get Status for High Acuity</label>
        <locationX>50</locationX>
        <locationY>1190</locationY>
        <actionName>TUC_GetCurrentVISNStatusInvocable</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Check_Location_VISN_Status</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Get_Status_for_High_Acuity_Error</targetReference>
        </faultConnector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>providedVISN</name>
            <value>
                <elementReference>chosenFacilityVISN</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>queueType</name>
            <value>
                <stringValue>High Acuity</stringValue>
            </value>
        </inputParameters>
        <nameSegment>TUC_GetCurrentVISNStatusInvocable</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>HighAcuityStatus</assignToReference>
            <name>output</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <description>Uses a provided Location&apos;s VISN to retrieve Tele-EC Escalation Status for the intermediate acuity queue</description>
        <name>Get_Status_for_Intermediate_Acuity</name>
        <label>Get Status for Intermediate Acuity</label>
        <locationX>578</locationX>
        <locationY>1190</locationY>
        <actionName>TUC_GetCurrentVISNStatusInvocable</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Check_Location_VISN_Status</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Get_Status_for_Intermediate_Accuity_Error</targetReference>
        </faultConnector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>providedVISN</name>
            <value>
                <elementReference>chosenFacilityVISN</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>queueType</name>
            <value>
                <stringValue>Intermediate Acuity</stringValue>
            </value>
        </inputParameters>
        <nameSegment>TUC_GetCurrentVISNStatusInvocable</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>IntermediateAcuityStatus</assignToReference>
            <name>output</name>
        </outputParameters>
    </actionCalls>
    <apiVersion>62.0</apiVersion>
    <assignments>
        <name>Assign_Chosen_Queue_to_RecordTypeNameChoice</name>
        <label>Assign Chosen Queue to RecordTypeNameChoice</label>
        <locationX>402</locationX>
        <locationY>890</locationY>
        <assignmentItems>
            <assignToReference>RecordTypeNameChoice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Select_the_Queue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_for_High_or_Intermediate_Case</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_for_High_or_Intermediate_Case</name>
        <label>Check for High or Intermediate Case</label>
        <locationX>314</locationX>
        <locationY>1082</locationY>
        <defaultConnector>
            <targetReference>Get_Status_for_Intermediate_Acuity</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Intermediate Acuity (2-8 hour RFI)</defaultConnectorLabel>
        <rules>
            <name>High</name>
            <conditionLogic>1</conditionLogic>
            <conditions>
                <leftValueReference>RecordTypeNameChoice</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>High Acuity (0-2 hours RFI)</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Status_for_High_Acuity</targetReference>
            </connector>
            <label>High Acuity (0-2 hours RFI)</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Location_VISN_Status</name>
        <label>Check Location VISN Status</label>
        <locationX>314</locationX>
        <locationY>1622</locationY>
        <defaultConnector>
            <targetReference>ChangingVisnAleartScreen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Location_VISN_is_Paused</name>
            <conditionLogic>((1 AND 2) OR (3 AND 4))</conditionLogic>
            <conditions>
                <leftValueReference>HighAcuityStatus</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Paused</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>RecordTypeNameChoice</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>High Acuity (0-2 hours RFI)</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IntermediateAcuityStatus</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Paused</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>RecordTypeNameChoice</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Intermediate Acuity (2-8 hours RFI)</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Location_VISN_Paused_Screen</targetReference>
            </connector>
            <label>Location VISN is Paused</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checks if the running user is TCT or not</description>
        <name>IS_TCT</name>
        <label>IS TCT?</label>
        <locationX>314</locationX>
        <locationY>674</locationY>
        <defaultConnector>
            <targetReference>Select_The_Queue_Screen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not TCT</defaultConnectorLabel>
        <rules>
            <name>Yes_TCT</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Permission.Tele_EC_TCT_User</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_for_High_or_Intermediate_Case</targetReference>
            </connector>
            <label>Yes TCT</label>
        </rules>
    </decisions>
    <decisions>
        <name>isVisnDifferent</name>
        <label>isVisnDifferent</label>
        <locationX>710</locationX>
        <locationY>566</locationY>
        <defaultConnector>
            <targetReference>UpdateCaseFacilityNoVISNDifference</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Same</defaultConnectorLabel>
        <rules>
            <name>Different</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>caseVisn</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>chosenFacilityVISN</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IS_TCT</targetReference>
            </connector>
            <label>Different</label>
        </rules>
    </decisions>
    <description>RELEASE 1.20: PTEMSTUC-3112: Creation of the flow. This flow double checks the user on updating the facility. And also checking if the new VISN is paused</description>
    <dynamicChoiceSets>
        <name>CaseRecordTypes</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Case</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>StartsWith</operator>
            <value>
                <stringValue>Tele_</stringValue>
            </value>
        </filters>
        <object>RecordType</object>
        <valueField>Name</valueField>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <description>This holds the case&apos;s visn</description>
        <name>caseVisn</name>
        <dataType>Number</dataType>
        <expression>{!Get_Case.TUC_Assigned_VISN__c}</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>chosenFacilityVISN</name>
        <dataType>Number</dataType>
        <expression>{!Get_Location_Chosen.VAF_VISN__c}</expression>
        <scale>0</scale>
    </formulas>
    <interviewLabel>TED Validation of Facility Change {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Validation of Facility Change</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <description>Gets the case from the record the user clicked the button on</description>
        <name>Get_Case</name>
        <label>Get Case</label>
        <locationX>710</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_RecordType</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Get_Case_Error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Select the location that was selected in the screen</description>
        <name>Get_Location_Chosen</name>
        <label>Get Location Chosen</label>
        <locationX>710</locationX>
        <locationY>458</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>isVisnDifferent</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Get_Location_Error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>LookupAndChooseFacility.recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Location</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_RecordType</name>
        <label>Get Case RecordType</label>
        <locationX>710</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Select_Facility</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Get_Case_Record_Type_Error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Case.RecordTypeId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>UpdateCaseFacilityNoVISNDifference</name>
        <label>UpdateCaseFacilityNoVISNDifference</label>
        <locationX>1106</locationX>
        <locationY>674</locationY>
        <connector>
            <targetReference>ConfirmFacilityChanged</targetReference>
        </connector>
        <faultConnector>
            <targetReference>UpdateCaseFacilityNoVISNDifferenceError</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>TUC_Assigned_Facility__c</field>
            <value>
                <elementReference>Get_Location_Chosen.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <runInMode>DefaultMode</runInMode>
    <screens>
        <name>ChangingVisnAleartScreen</name>
        <label>ChangingVisnAleartScreen</label>
        <locationX>446</locationX>
        <locationY>1730</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Assign_to_Queue</targetReference>
        </connector>
        <fields>
            <name>changeVisnAleart</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); font-size: 14px; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Roboto, Oxygen, Ubuntu, &amp;quot;Fira Sans&amp;quot;, &amp;quot;Droid Sans&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, sans-serif; color: rgb(23, 43, 77);&quot;&gt;You are about to move this patient to another VISN. The patient will now be transferred from the VISN {!caseVisn} board and appear on the VISN {!chosenFacilityVISN} board. Ensure that communication to the receiving VISN has been made. Select confirm to continue and complete the transfer.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Confirm</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>ConfirmFacilityChanged</name>
        <label>ConfirmFacilityChanged</label>
        <locationX>1106</locationX>
        <locationY>782</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>FacilityUpdatedDisplayText</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;The facility has been successfully updated.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Get_Case_Error</name>
        <label>Get Case Error</label>
        <locationX>2162</locationX>
        <locationY>242</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>CaseErrorMessage</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(196, 18, 48);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Get_Case_Record_Type_Error</name>
        <label>Get Case Record Type Error</label>
        <locationX>1898</locationX>
        <locationY>350</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>GetCaseRecordTypeErrorMessage</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(196, 18, 48);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Get_Location_Error</name>
        <label>Get Location Error</label>
        <locationX>1634</locationX>
        <locationY>566</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>GetLocationError</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(196, 18, 48);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Get_Status_for_High_Acuity_Error</name>
        <label>Get Status for High Acuity Error</label>
        <locationX>314</locationX>
        <locationY>1298</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>GetStatusforHighAcuityErrorMessage</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(196, 18, 48);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Get_Status_for_Intermediate_Accuity_Error</name>
        <label>Get Status for Intermediate Accuity Error</label>
        <locationX>842</locationX>
        <locationY>1298</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>GetStatusforIntermediateAccuityErrorMessage</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(196, 18, 48);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Location_VISN_Paused_Screen</name>
        <label>Location VISN Paused Screen</label>
        <locationX>182</locationX>
        <locationY>1730</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>VisnIsPaused</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;VISN {!chosenFacilityVISN} is currently paused. No transfer can be made at this time.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Select_Facility</name>
        <label>Select Facility</label>
        <locationX>710</locationX>
        <locationY>350</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <backButtonLabel>Cancel</backButtonLabel>
        <connector>
            <targetReference>Get_Location_Chosen</targetReference>
        </connector>
        <fields>
            <name>DisplayText1stScreen</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;Please select the Facility you would like to change to.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>LookupAndChooseFacility</name>
            <extensionName>flowruntime:lookup</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fieldApiName</name>
                <value>
                    <stringValue>TUC_Assigned_Facility__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Facility</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objectApiName</name>
                <value>
                    <stringValue>Case</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>required</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <nextOrFinishButtonLabel>Confirm</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Select_The_Queue_Screen</name>
        <label>Select The Queue</label>
        <locationX>402</locationX>
        <locationY>782</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Assign_Chosen_Queue_to_RecordTypeNameChoice</targetReference>
        </connector>
        <fields>
            <name>SelectQueueDisplayText</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;Please select the Queue&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Select_the_Queue</name>
            <choiceReferences>CaseRecordTypes</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>Get_Case.RecordType.DeveloperName</elementReference>
            </defaultValue>
            <fieldText>Select the Queue</fieldText>
            <fieldType>DropdownBox</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>UpdateCaseFacilityNoVISNDifferenceError</name>
        <label>UpdateCaseFacilityNoVISNDifferenceError</label>
        <locationX>1370</locationX>
        <locationY>782</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>UpdateCaseFacilityNoVISNDifferenceErrorMessage</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(196, 18, 48);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>584</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Case</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>Assign_to_Queue</name>
        <label>Assign to Queue</label>
        <locationX>446</locationX>
        <locationY>1838</locationY>
        <flowName>TED_Assign_to_Queue</flowName>
        <inputAssignments>
            <name>changedFacility</name>
            <value>
                <elementReference>Get_Location_Chosen.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>recordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>SelectedQueueType</name>
            <value>
                <elementReference>RecordTypeNameChoice</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <variables>
        <description>this holds the chosen Facility from the first screen</description>
        <name>facilityChosenVariable</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>FacilitySelection</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>HighAcuityStatus</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>IntermediateAcuityStatus</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Holds the chosen Queue, or if TCT then use the Cases Queue</description>
        <name>RecordTypeNameChoice</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>Get_Case.RecordType.Name</elementReference>
        </value>
    </variables>
    <variables>
        <name>theOriginalCaseRecordType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>Get_Case.RecordType.Name</elementReference>
        </value>
    </variables>
</Flow>
