<?xml version="1.0" encoding="UTF-8" ?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <assignments>
        <description>Sets the First Progress Note as the Record to be passed into the Sign Note Flow.</description>
        <name>First_Note_Equals_RecordId</name>
        <label>First Note Equals RecordId</label>
        <locationX>974</locationX>
        <locationY>1022</locationY>
        <assignmentItems>
            <assignToReference>RecordId_For_Sign_Note.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_First_Progress_Note.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Main_Sign_Note_Flow</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the Second Progress Note as the Record to be passed into the Sign Note Flow.</description>
        <name>Second_Note_Equals_RecordId</name>
        <label>Second Note Equals RecordId</label>
        <locationX>182</locationX>
        <locationY>1346</locationY>
        <assignmentItems>
            <assignToReference>RecordId_For_Sign_Note.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Second_Progress_Note.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Main_Sign_Note_Flow</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>If there is a Second Progress note, it needs to be updated with the values populated in the First Progress Note.</description>
        <name>Are_There_Multiple_Progress_Notes</name>
        <label>Are There Multiple Progress Notes?</label>
        <locationX>677</locationX>
        <locationY>350</locationY>
        <defaultConnector>
            <targetReference>Is_First_Progress_Note_Signed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No, Just One</defaultConnectorLabel>
        <rules>
            <name>Yes_Multiple</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recordId.PC_Case__r.PrC_FLP_Site_Id__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>recordId.PC_Case__r.PrC_Specialist_Site_Id__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Second_PN_Record_Type</targetReference>
            </connector>
            <label>Yes, Multiple</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines if the First progress Note is Signed by Record Type</description>
        <name>Is_First_Progress_Note_Signed</name>
        <label>Is First Progress Note Signed?</label>
        <locationX>677</locationX>
        <locationY>914</locationY>
        <defaultConnector>
            <targetReference>First_Note_Equals_RecordId</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>First Not Signed</defaultConnectorLabel>
        <rules>
            <name>First_Signed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_First_Progress_Note.VCC_Signed__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Was_there_a_Second_Note</targetReference>
            </connector>
            <label>First Signed</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines if the Second Progress Note is Signed by Record Type</description>
        <name>Is_Second_Progress_Note_Signed</name>
        <label>Is Second Progress Note Signed?</label>
        <locationX>50</locationX>
        <locationY>1238</locationY>
        <defaultConnector>
            <targetReference>Second_Note_Equals_RecordId</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Second Not Signed</defaultConnectorLabel>
        <rules>
            <name>Second_Signed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Updated_Second_Progress_Note.VCC_Signed__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Second Signed</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines if a Second note was created at the time of Progress Note Creation.</description>
        <name>Was_there_a_Second_Note</name>
        <label>Was there a Second Note?</label>
        <locationX>380</locationX>
        <locationY>1022</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Second_Progress_Note</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Updated_Second_Progress_Note</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>1.20.0-PTEMSPC-2361: This Flow is triggered by the Sign Note button on the Progress Note record specific to Provider Connect. This determines which Record Id needs to be passed into the main Sign Note flow (the First note or the Second Note), and updates the second note with values of the first. .</description>
    <environments>Default</environments>
    <interviewLabel>PC Sign Note Pre Verification {!$Flow.CurrentDateTime}</interviewLabel>
    <label>PC Sign Note Pre Verification</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <description>Retrieves the Record Type identifying the First Progress Note</description>
        <name>Get_First_PN_Record_Type</name>
        <label>Get First PN Record Type</label>
        <locationX>677</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_First_Progress_Note</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Error_Screen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>PC_Provider_Connect_Progress_Note</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Retrieves the First PC Progress Note, identified by Record Type, that runs through the Sign Note Process.</description>
        <name>Get_First_Progress_Note</name>
        <label>Get First Progress Note</label>
        <locationX>677</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Are_There_Multiple_Progress_Notes</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Error_Screen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>PC_Case__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId.PC_Case__r.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_First_PN_Record_Type.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>VCC_Progress_Note__c</object>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Retrieves the Record Type identifying the Second Progress Note</description>
        <name>Get_Second_PN_Record_Type</name>
        <label>Get Second PN Record Type</label>
        <locationX>149</locationX>
        <locationY>458</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Second_Progress_Note</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Error_Screen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>PC_Provider_Connect_FLP_Progress_Note</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Retrieves the Second Progress Note (If Necessary), identified by Record Type, that runs through the Sign Note Process.</description>
        <name>Get_Second_Progress_Note</name>
        <label>Get Second Progress Note</label>
        <locationX>149</locationX>
        <locationY>566</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Second_Progress_Note</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Error_Screen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>PC_Case__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId.PC_Case__r.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Second_PN_Record_Type.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>VCC_Progress_Note__c</object>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Retrieves the second progress note again, after all of its updates have been made, in order to pass its record ID into he sign note flow.</description>
        <name>Get_Updated_Second_Progress_Note</name>
        <label>Get Updated Second Progress Note</label>
        <locationX>50</locationX>
        <locationY>1130</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Second_Progress_Note_Signed</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error_Screen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Second_Progress_Note.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>VCC_Progress_Note__c</object>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Update the Second Progress Note with the values of the first Progress Note</description>
        <name>Update_Second_Progress_Note</name>
        <label>Update Second Progress Note</label>
        <locationX>149</locationX>
        <locationY>674</locationY>
        <connector>
            <targetReference>Is_First_Progress_Note_Signed</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Error_Screen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Second_Progress_Note.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>PC_Assessment_Recommendation__c</field>
            <value>
                <elementReference>Get_First_Progress_Note.PC_Assessment_Recommendation__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PC_Recommendations_Provided__c</field>
            <value>
                <elementReference>Get_First_Progress_Note.PC_Recommendations_Provided__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PC_Time_Spent_Discussing__c</field>
            <value>
                <elementReference>Get_First_Progress_Note.PC_Time_Spent_Discussing__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PC_Total_Time_Spent__c</field>
            <value>
                <elementReference>Get_First_Progress_Note.PC_Total_Time_Spent__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>VCC_Allergies__c</field>
            <value>
                <elementReference>Get_First_Progress_Note.VCC_Allergies__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>VCC_Imaging_Comments__c</field>
            <value>
                <elementReference>Get_First_Progress_Note.VCC_Imaging_Comments__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>VCC_Immunizations__c</field>
            <value>
                <elementReference>Get_First_Progress_Note.VCC_Immunizations__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>VCC_Medications__c</field>
            <value>
                <elementReference>Get_First_Progress_Note.VCC_Medications__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>VCC_Non_VA_Medications__c</field>
            <value>
                <elementReference>Get_First_Progress_Note.VCC_Non_VA_Medications__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>VCC_Problems__c</field>
            <value>
                <elementReference>Get_First_Progress_Note.VCC_Problems__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>VCC_Result_Comments__c</field>
            <value>
                <elementReference>Get_First_Progress_Note.VCC_Result_Comments__c</elementReference>
            </value>
        </inputAssignments>
        <object>VCC_Progress_Note__c</object>
    </recordUpdates>
    <screens>
        <description>Displays any faults received during the flow.</description>
        <name>Error_Screen</name>
        <label>Error Screen</label>
        <locationX>446</locationX>
        <locationY>1238</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Error_Text</name>
            <fieldText>&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>551</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_First_PN_Record_Type</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <description>Passes in the appropriate Record Id and initiates the Sign Note Flow.</description>
        <name>Main_Sign_Note_Flow</name>
        <label>Main Sign Note Flow</label>
        <locationX>677</locationX>
        <locationY>1706</locationY>
        <flowName>VCC_Sign_Note_with_Callouts_2</flowName>
        <inputAssignments>
            <name>recordId</name>
            <value>
                <elementReference>RecordId_For_Sign_Note.Id</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <variables>
        <description>Stores the recordId being passed into this flow.</description>
        <name>recordId</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>VCC_Progress_Note__c</objectType>
    </variables>
    <variables>
        <description>Stores the recordId of the Progress Note that needs to be passed into the Main Sign Note Flow.</description>
        <name>RecordId_For_Sign_Note</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <objectType>VCC_Progress_Note__c</objectType>
    </variables>
</Flow>
