<?xml version="1.0" encoding="UTF-8" ?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Redirect_to_Progress_Note</name>
        <label>Redirect to Progress Note</label>
        <locationX>1692</locationX>
        <locationY>554</locationY>
        <actionName>c:vccRedirectComponent</actionName>
        <actionType>component</actionType>
        <connector>
            <targetReference>Toast_Message_Banner</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Flow_Error</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>recId</name>
            <value>
                <elementReference>progressNoteRecord.Id</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <apiVersion>57.0</apiVersion>
    <assignments>
        <name>Add_PN_Ids_to_Text_List</name>
        <label>Add PN Ids to Text List</label>
        <locationX>821</locationX>
        <locationY>50</locationY>
        <assignmentItems>
            <assignToReference>newProgressNoteListIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_Through_newProgressNoteList.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Through_newProgressNoteList</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Looping through the Progress Note Records and adding the Names to a Text Variable to be used in Toast Message.</description>
        <name>Add_Progress_Note_Name_to_Text_Var</name>
        <label>Add Progress Note Names to Text Var</label>
        <locationX>1152</locationX>
        <locationY>50</locationY>
        <assignmentItems>
            <assignToReference>pnNameText</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>{!Loop_Get_Progress_Notes_Collection.Name}, </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Get_Progress_Notes_Collection</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Newest_PN_to_Var</name>
        <label>Assign Newest PN to Var</label>
        <locationX>1693</locationX>
        <locationY>249</locationY>
        <assignmentItems>
            <assignToReference>progressNoteRecord</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Newest_PN_Record_For_Assignment</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Redirect_to_Progress_Note</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Get_Count_of_newProgressNoteList</name>
        <label>Get Count of newProgressNoteList</label>
        <locationX>462</locationX>
        <locationY>249</locationY>
        <assignmentItems>
            <assignToReference>pnCount</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>newProgressNoteList</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Progress_Count_1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Progress_Note_Plural_Text</name>
        <label>Progress Note Plural Text</label>
        <locationX>592</locationX>
        <locationY>54</locationY>
        <assignmentItems>
            <assignToReference>pnNameText</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>Progress Notes </stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>pnNameEndText</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>were created.</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Through_newProgressNoteList</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Progress_Note_Singular_Text</name>
        <label>Progress Note Singular Text</label>
        <locationX>591</locationX>
        <locationY>430</locationY>
        <assignmentItems>
            <assignToReference>pnNameText</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>Progress Note </stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>pnNameEndText</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>was created.</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Through_newProgressNoteList</targetReference>
        </connector>
    </assignments>
    <collectionProcessors>
        <name>Sort_For_most_Recent_PN_Record</name>
        <elementSubtype>SortCollectionProcessor</elementSubtype>
        <label>Sort For most Recent PN Record</label>
        <locationX>1371</locationX>
        <locationY>243</locationY>
        <collectionProcessorType>SortCollectionProcessor</collectionProcessorType>
        <collectionReference>Get_Progress_Notes</collectionReference>
        <connector>
            <targetReference>Loop_Newest_PN_Record_For_Assignment</targetReference>
        </connector>
        <limit>1</limit>
        <sortOptions>
            <doesPutEmptyStringAndNullFirst>false</doesPutEmptyStringAndNullFirst>
            <sortField>Name</sortField>
            <sortOrder>Desc</sortOrder>
        </sortOptions>
    </collectionProcessors>
    <decisions>
        <name>Progress_Count_1</name>
        <label>Progress Count &gt; 1?</label>
        <locationX>583</locationX>
        <locationY>251</locationY>
        <defaultConnectorLabel>No Progress Notes Found End Flow</defaultConnectorLabel>
        <rules>
            <name>Greater_Than_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>pnCount</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Progress_Note_Plural_Text</targetReference>
            </connector>
            <label>Greater Than 1</label>
        </rules>
        <rules>
            <name>Equal_To_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>pnCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Progress_Note_Singular_Text</targetReference>
            </connector>
            <label>Equal To 1</label>
        </rules>
    </decisions>
    <description
    >Sub Flow for Document Scheduling &amp; Administrative Actions (VCC_Document_Scheduling_Admin_actions1). Redirects End-User to Created Progress Note and Displays Toast
        message.</description>
    <environments>Default</environments>
    <formulas>
        <description>Removing Last Character from pnNameText.</description>
        <name>pnNameTextTrimmed</name>
        <dataType>String</dataType>
        <expression>LEFT({!pnNameText}, LEN({!pnNameText})-2)</expression>
    </formulas>
    <interviewLabel>VCC_Check_Case_ProgressNote_SubFlow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>VCC_Check_Case_ProgressNote_SubFlow</label>
    <loops>
        <name>Loop_Get_Progress_Notes_Collection</name>
        <label>Loop Get Progress Notes Collection</label>
        <locationX>1151</locationX>
        <locationY>242</locationY>
        <collectionReference>Get_Progress_Notes</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Add_Progress_Note_Name_to_Text_Var</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Sort_For_most_Recent_PN_Record</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_Newest_PN_Record_For_Assignment</name>
        <label>Loop Newest PN Record For Assignment</label>
        <locationX>1519</locationX>
        <locationY>243</locationY>
        <collectionReference>Get_Progress_Notes</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_Newest_PN_to_Var</targetReference>
        </nextValueConnector>
    </loops>
    <loops>
        <description>Loop through newProgressNoteList, a progress note collection passed from VCC Document Actions Main Flow to add Ids to Text Collection.</description>
        <name>Loop_Through_newProgressNoteList</name>
        <label>Loop Through newProgressNoteList</label>
        <locationX>824</locationX>
        <locationY>250</locationY>
        <collectionReference>newProgressNoteList</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Add_PN_Ids_to_Text_List</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Get_Progress_Notes</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_Progress_Notes</name>
        <label>Get Progress Notes</label>
        <locationX>997</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_Get_Progress_Notes_Collection</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Flow_Error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>VCC_Case__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>VCC_Signed__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>newProgressNoteListIds</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>VCC_Progress_Note__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>VCC_Case__c</queriedFields>
        <queriedFields>Name</queriedFields>
        <queriedFields>CreatedDate</queriedFields>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <description
        >Creates Two Toast Message Banners 1. Message to inform end-user that Progress Note Record is displaying 2. Message that Case was created and ability to navigate back
            to Person Account record.</description>
        <name>Toast_Message_Banner</name>
        <label>Toast Message Banner</label>
        <locationX>1863</locationX>
        <locationY>554</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>toastSuccess_Existing</name>
            <extensionName>c:vccFlowNotification</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>delay</name>
                <value>
                    <numberValue>0.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>urlLabel</name>
                <value>
                    <stringValue>Click here</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>title</name>
                <value>
                    <stringValue>Success!</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>variant</name>
                <value>
                    <stringValue>success</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>message</name>
                <value>
                    <stringValue>{!progressNoteToastMessage} You can document your work now!</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>newCaseCheck</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>toastSuccess_new</name>
            <extensionName>c:vccFlowNotification</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>variant</name>
                <value>
                    <stringValue>success</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>delay</name>
                <value>
                    <numberValue>0.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>message</name>
                <value>
                    <stringValue>{!toastSuccessMessage} You can document your work now!</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>urlLabel</name>
                <value>
                    <stringValue>Click here</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>progressNoteRecord.VCC_Case__r.Account.Id</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>title</name>
                <value>
                    <stringValue>Success!</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>mode</name>
                <value>
                    <stringValue>dismissible</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>newCaseCheck</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>99</locationX>
        <locationY>231</locationY>
        <connector>
            <targetReference>Get_Count_of_newProgressNoteList</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>Flow_Error</name>
        <label>Flow Error</label>
        <locationX>996</locationX>
        <locationY>558</locationY>
        <flowName>VCC_Flow_Error_Display</flowName>
        <inputAssignments>
            <name>SYSTEM_ERROR</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <textTemplates>
        <name>progressNoteToastMessage</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{!pnNameTextTrimmed} {!pnNameEndText}</text>
    </textTemplates>
    <textTemplates>
        <name>toastSuccessMessage</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Case {!progressNoteRecord.VCC_Case__r.CaseNumber} was created! Case Status: {!progressNoteRecord.VCC_Case__r.Status}. {!progressNoteToastMessage}</text>
    </textTemplates>
    <variables>
        <description>Boolean Variable that receives input from Document Actions Flow. True = New Case was created. False = Existing Case.</description>
        <name>newCaseCheck</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>newProgressNoteList</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>VCC_Progress_Note__c</objectType>
    </variables>
    <variables>
        <name>newProgressNoteListIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>pnCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>pnNameEndText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>pnNameText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>progressNoteRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>VCC_Progress_Note__c</objectType>
    </variables>
    <variables>
        <description>Will accept CaseId</description>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
