name: pr-mimic-dtc-codescan
run-name: PR Mimic DTC CodeScan

on:
  workflow_call:

jobs:
  # This job is responsible for executing the DTC's codeScan.io (Autorabbit) scanner and attaching the findings to the Security scans tab.
  codescanIO:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by GitHub/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:
      # Since we're not checking out into a custom docker image, we don't need to set the safe dir.
      - name: Checkout Repository
        uses: actions/checkout@v4
      # Cache the .sonar directory to speed up the process.
      - name: Cache files
        uses: actions/cache@v4
        with:
          path: |
            ~/.sonar
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      # This actually invokes the analysis. We're using the codescan-io/codescan-scanner-action@master action to do this.
      - name: Run Analysis
        continue-on-error: true # we want this to continue, even if the quality gates fail.
        uses: codescan-io/codescan-scanner-action@master
        with:
          login: ${{ secrets.CODESCAN_AUTH_TOKEN }}
          organization: ${{ secrets.CODESCAN_ORGANIZATION_KEY }}
          projectKey: ${{ secrets.CODESCAN_PROJECT_KEY }}
          failOnRedQualityGate: true
          args: |
            sonar.verbose=true
            sonar.java.binaries=target
      # The step before generates a SARIF file. This step uploads that file as an artifact.
      - name: Upload raw sarif file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: codescan-sarif
          path: codescan.sarif
      # This step uploads the SARIF file to the Security tab.
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: codescan.sarif
          category: codescanIo