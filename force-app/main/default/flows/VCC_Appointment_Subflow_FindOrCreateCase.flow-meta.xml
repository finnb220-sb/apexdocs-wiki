<?xml version="1.0" encoding="UTF-8" ?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Add_Log_Entry_for_Error</name>
        <label>Add Log Entry for Error</label>
        <locationX>578</locationX>
        <locationY>1490</locationY>
        <actionName>FlowLogEntry</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Save_Error_Log</targetReference>
        </connector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>flowName</name>
            <value>
                <stringValue>VCC_Appointment_Subflow_FindOrCreateCase</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>loggingLevelName</name>
            <value>
                <elementReference>LoggingLevel_Error_TextValue</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>message</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>FlowLogEntry</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Save_Error_Log</name>
        <label>Save Error Log</label>
        <locationX>578</locationX>
        <locationY>1598</locationY>
        <actionName>Logger</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>ErrorScreen</targetReference>
        </connector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <nameSegment>Logger</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>61.0</apiVersion>
    <assignments>
        <name>Build_new_scheduling_case</name>
        <label>Build new scheduling case</label>
        <locationX>226</locationX>
        <locationY>1274</locationY>
        <assignmentItems>
            <assignToReference>schedulingCase_var.AccountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Person_Account.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>schedulingCase_var.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Scheduling_Case_Record_Type.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>schedulingCase_var.VCC_Case_Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AdministrativeTextValue</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>schedulingCase_var.VCC_Case_Sub_Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AdministrativeAndSchedulingTextValue</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>schedulingCase_var.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>OpenTextValue</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>schedulingCase_var.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Scheduling &amp; Administrative Actions</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>schedulingCase_var.ContactId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Person_Account.PersonContactId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>schedulingCase_var.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newCaseCheck</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>schedulingCase_var.VCC_Case_Reason_Multi__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>schedulingCase_var.VCC_Case_Outcome_Multi__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>schedulingCase_var.VCC_Other_Case_Reason__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>schedulingCase_var.VCC_Other_Case_Outcome__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>schedulingCase_var.VCC_Mental_Health_Appointment__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>schedulingCase_var.VCC_Cannot_Comp_Scheduling_Action_Reason__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>schedulingCase_var.VCC_Specialty_Community_Care_Requested__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>schedulingCase_var.VCC_Requested_Services_Multi__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <connector>
            <targetReference>Insert_New_Scheduling_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Use the existing case to document the scheduling action by assigning existingCase to schedulingCase_var, which is returned as output.</description>
        <name>Return_Existing_Case</name>
        <label>Return Existing Case</label>
        <locationX>138</locationX>
        <locationY>890</locationY>
        <assignmentItems>
            <assignToReference>schedulingCase_var</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>existingCase</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <description>Since outcome is a multiselect picklist, Flow can&apos;t filter out records that contain &apos;Completed Scheduling Action&apos; in the Get Records Element. 
Instead we check in this decision using INCLUDES via formula. 
If the closed case was not used for a Scheduling Action, we&apos;ll use it to document the current Scheduling action. 
If the closed case was already used for a Scheduling Action, we will create a new case.</description>
        <name>Already_Used_for_SCD_Action</name>
        <label>Already Used for SCD Action?</label>
        <locationX>50</locationX>
        <locationY>782</locationY>
        <defaultConnector>
            <targetReference>Return_Existing_Case</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No - use existing case</defaultConnectorLabel>
        <rules>
            <name>Yes_Case_already_used</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CaseOutcomeIncludesSCDAction</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>schedulingCase_var.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Build_new_scheduling_case</targetReference>
            </connector>
            <label>Already used - need new case</label>
        </rules>
    </decisions>
    <decisions>
        <description>If the Id field is NOT null, then the Case record exists
If the Id field is null, then no Case record was found</description>
        <name>Was_there_an_existing_Case</name>
        <label>Was there an existing Case?</label>
        <locationX>226</locationX>
        <locationY>674</locationY>
        <defaultConnector>
            <targetReference>Build_new_scheduling_case</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Existing Case</defaultConnectorLabel>
        <rules>
            <name>Yes_Existing_Case_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>existingCase</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Already_Used_for_SCD_Action</targetReference>
            </connector>
            <label>Yes - Existing Case Found</label>
        </rules>
    </decisions>
    <description>Find existing scheduling case or create new case
Add decision to exclude Closed Cases with Completed Scheduling Action
CCCM-40636 - Update Get Most Recent Task for Verify Caller task types</description>
    <environments>Default</environments>
    <formulas>
        <name>CaseOutcomeIncludesSCDAction</name>
        <dataType>Boolean</dataType>
        <expression>INCLUDES( {!existingCase.VCC_Case_Outcome_Multi__c} , &apos;Completed Scheduling Action&apos;)</expression>
    </formulas>
    <interviewLabel>VCC_Appointment_Subflow_FindOrCreateCase {!$Flow.CurrentDateTime}</interviewLabel>
    <label>VCC_Appointment_Subflow_FindOrCreateCase</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>Insert_New_Scheduling_Case</name>
        <label>Insert New Scheduling Case</label>
        <locationX>226</locationX>
        <locationY>1382</locationY>
        <faultConnector>
            <targetReference>Add_Log_Entry_for_Error</targetReference>
        </faultConnector>
        <inputReference>schedulingCase_var</inputReference>
    </recordCreates>
    <recordLookups>
        <description>Find existing Case for selected patient, Scheduling record type and one of the following conditions:
Case record Id matches WhatId from Task
OR OwnerId matches UserId and Status is Open
OR Open VCV Case from the queue</description>
        <name>Get_Existing_Scheduling_Case</name>
        <label>Get Existing Scheduling Case</label>
        <locationX>226</locationX>
        <locationY>566</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Was_there_an_existing_Case</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Add_Log_Entry_for_Error</targetReference>
        </faultConnector>
        <filterLogic>1 AND 2 AND ( (3) OR (4 AND 9) OR (5 AND 6 AND 7 AND 8 AND 9) )</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Person_Account.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Scheduling_Case_Record_Type.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Most_Recent_Task_User_and_Patient.WhatId</elementReference>
            </value>
        </filters>
        <filters>
            <field>OwnerId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>VCC_Owner_Queue_type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>_MSA</stringValue>
            </value>
        </filters>
        <filters>
            <field>VCC_VISN_to_Queue_Formula__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>VCC_Appointment_Service__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>appointmentServiceTextChoice</elementReference>
            </value>
        </filters>
        <filters>
            <field>VCC_Follow_Up_Appt_Needed__c</field>
            <operator>NotEqualTo</operator>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </filters>
        <object>Case</object>
        <outputReference>existingCase</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Status</queriedFields>
        <queriedFields>OwnerId</queriedFields>
        <queriedFields>VCC_Case_Reason_Multi__c</queriedFields>
        <queriedFields>VCC_Other_Case_Reason__c</queriedFields>
        <queriedFields>VCC_Progress_Notes_Count__c</queriedFields>
        <queriedFields>Subject</queriedFields>
        <queriedFields>VCC_Mental_Health_Appointment__c</queriedFields>
        <queriedFields>VCC_Cannot_Comp_Scheduling_Action_Reason__c</queriedFields>
        <queriedFields>VCC_Specialty_Community_Care_Requested__c</queriedFields>
        <queriedFields>VCC_Requested_Services_Multi__c</queriedFields>
        <queriedFields>Type</queriedFields>
        <queriedFields>VCC_Case_Sub_Type__c</queriedFields>
        <queriedFields>VCC_Case_Outcome_Multi__c</queriedFields>
        <queriedFields>VCC_Other_Case_Outcome__c</queriedFields>
        <sortField>LastModifiedDate</sortField>
        <sortOrder>Desc</sortOrder>
    </recordLookups>
    <recordLookups>
        <description>Finds Tasks for the User AND Patient, most recent based on CreatedDate, for VCC_Verify_Caller task types</description>
        <name>Get_Most_Recent_Task_User_and_Patient</name>
        <label>Get Most Recent Task - User AND Patient</label>
        <locationX>226</locationX>
        <locationY>458</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Existing_Scheduling_Case</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Add_Log_Entry_for_Error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OwnerId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>WhoId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Person_Account.PersonContactId</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Record_Type_Verify_Caller_Task.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Task</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Person_Account</name>
        <label>Get Person Account</label>
        <locationX>226</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Scheduling_Case_Record_Type</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Add_Log_Entry_for_Error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>accountId_var</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get the record type for VCC_Verify_Caller in the task object</description>
        <name>Get_Record_Type_Verify_Caller_Task</name>
        <label>Get Record Type - Verify Caller Task</label>
        <locationX>226</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Most_Recent_Task_User_and_Patient</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Add_Log_Entry_for_Error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Task</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>VCC_Verify_Caller</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get Record Type on Case that is used for Scheduling which is named VCC_Administrative</description>
        <name>Get_Scheduling_Case_Record_Type</name>
        <label>Get Scheduling Case Record Type</label>
        <locationX>226</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Record_Type_Verify_Caller_Task</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Add_Log_Entry_for_Error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Case</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>VCC_Administrative</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <name>ErrorScreen</name>
        <label>ErrorScreen</label>
        <locationX>578</locationX>
        <locationY>1706</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>errorDisplay</name>
            <extensionName>c:vccErrorDisplay</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>system</name>
                <value>
                    <elementReference>$Flow.FaultMessage</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>userFriendly</name>
                <value>
                    <stringValue>Error finding or creating Scheduling Case for this Service Appointment.</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>100</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Person_Account</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <description>Account Id for Input, can be from a Person Account page or AccountId field on Service Appointment</description>
        <name>accountId_var</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>AdministrativeAndSchedulingTextValue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Administrative and Scheduling</stringValue>
        </value>
    </variables>
    <variables>
        <name>AdministrativeTextValue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Administrative</stringValue>
        </value>
    </variables>
    <variables>
        <description>The appointment service that is being used to grab existing records</description>
        <name>appointmentServiceTextChoice</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>CompletedSchedulingActionTextValue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Completed Scheduling Action</stringValue>
        </value>
    </variables>
    <variables>
        <name>existingCase</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>LoggingLevel_Error_TextValue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>ERROR</stringValue>
        </value>
    </variables>
    <variables>
        <description>checks if the case that is returned from this flow was newly created or updated</description>
        <name>newCaseCheck</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>OpenTextValue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Open</stringValue>
        </value>
    </variables>
    <variables>
        <description>Scheduling Case to return; either the existing case or the new case</description>
        <name>schedulingCase_var</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <objectType>Case</objectType>
    </variables>
</Flow>
