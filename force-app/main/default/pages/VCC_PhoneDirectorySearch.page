<apex:page controller="VCC_PhoneDirectorySearchController" showHeader="false" lightningStyleSheets="true">
    <head>
        <apex:slds />
    </head>
    <apex:includeScript value="{!URLFOR($Resource.cnx__CnxSfdcResources,'js/ConnectsIntegrationAPI.min.js')}"/>
    <script>
        var messageChannel = "{!JSENCODE($MessageChannel.cnx__ConnectsIntegrationAPI__c)}";
        ConnectsIntegrationAPI.setLMSEnvironment({
            mode: 'Visualforce',
            channel: messageChannel
        });
    </script>

    <div class="slds-scope">
        <article class="slds-card slds-theme_shade" id="searchCard">
            <div class="slds-card__header slds-card_boundary slds-var-p-bottom_small slds-theme_default">
                <div onclick="toggleCollapse2()" style="cursor:pointer;">
                    <h2 class="slds-card__header-title">Directory Search</h2>
                </div>
                <div id="searchFormContainer">
                    <apex:form id="searchForm">
                        <apex:inputText value="{!searchKey}" label="Search" style="width:95%;" onkeydown="preventEnter(event)">
                            <apex:actionSupport event="onkeyup" action="{!search}" reRender="searchResultsRepeater"/>
                        </apex:inputText>
                        <apex:inputHidden value="{!searchMethod}" id="searchMethodInputHidden"/>
                    </apex:form>
                </div>
            </div>
            <div class="slds-card__body slds-card__body_inner slds-is-relative slds-scrollable" id="searchResultsContainer">
                <apex:outputPanel id="searchResultsRepeater">
                    <apex:repeat value="{!searchResults}" var="entry">
                        <div class="slds-card slds-card_boundary">
                            <div class="slds-card__header">
                                <h2 class="slds-card__header-title">{!entry.Name}</h2>
                            </div>
                            <div class="slds-card__body slds-card__body_inner">
                                <apex:outputPanel rendered="{!entry.Description__c != NULL}">
                                    <apex:outputText value="{!entry.Description__c}"/><br/>
                                </apex:outputPanel>
                                <apex:outputLink value="#" onclick="sendClickedNumberToDialer('{!JSINHTMLENCODE(entry.Phone_Number__c)}')" title="Click to dial">{!JSINHTMLENCODE(entry.Phone_Number__c)}</apex:outputLink>
                                <!-- <apex:outputLink value="#" onclick="copyClickedNumberToClipboard('{!entry.Phone_Number__c}')"> (Copy)</apex:outputLink> -->
                            </div>
                        </div>
                    </apex:repeat>
                </apex:outputPanel>
            </div>
        </article>
    </div>

    <script>
        var ToolbarState = 'Expanded';
        
        ConnectsIntegrationAPI.waitReady(function () {
            ConnectsIntegrationAPI.writeLogDebug('Connects Integration API Successfully loaded from' + ' SoftphoneDirectorySearch page.');
            processCustomSettings()
            .then(() => {
                toggleCollapse2();
            });
        });

        function processCustomSettings(){
            return new Promise(function(resolve, reject){
                ConnectsIntegrationAPI.getCustomSettings('softphoneDirectorySettings', function(softphoneDirectorySettingsResponse){
                    if(softphoneDirectorySettingsResponse && softphoneDirectorySettingsResponse.success){
                        let softphoneDirectorySettingsJSON = softphoneDirectorySettingsResponse.data;
                        let softphoneDirectorySettings = JSON.parse(softphoneDirectorySettingsJSON);
                        
                        if(softphoneDirectorySettings.searchContainerHeightInPixels){
                            document.getElementById('searchResultsContainer').style.height = softphoneDirectorySettings.searchContainerHeightInPixels;
                        }

                        if(softphoneDirectorySettings.searchMethod){
                            let searchMethodInput = document.getElementById('j_id0:searchForm:searchMethodInputHidden');
                            if(searchMethodInput){
                                searchMethodInput.value = softphoneDirectorySettings.searchMethod;
                            }
                        }
                    }
                    else{

                    }
                    resolve();
                });
            });
        }

        function toggleCollapse(){
            let wasCollapsed = document.getElementById('searchFormContainer').style.display === 'none';
            let expand = wasCollapsed;
            let newDisplay = wasCollapsed ? '' : 'none';

            document.getElementById('searchFormContainer').style.display = newDisplay;
            document.getElementById('searchResultsContainer').style.display = newDisplay;
            
            let searchCard = document.getElementById('searchCard');
            if(expand){
                searchCard.style.position = '';
                searchCard.style.bottom = '';
                searchCard.style.width = '';
            }
            else{
                searchCard.style.position = 'absolute';
                searchCard.style.bottom = '0';
                searchCard.style.width = '100%';
            }
        }
        
        function toggleCollapse2(){
            ConnectsIntegrationAPI.writeLogDebug('DAVEDAVEDAVE 1');
            var toolbarPosition = ConnectsIntegrationAPI.GENERAL.TOOLBAR_POSITION.AUTO;

            if (ToolbarState == 'Expanded') {
            ConnectsIntegrationAPI.writeLogDebug('DAVEDAVEDAVE 2');
                ConnectsIntegrationAPI.setCustomToolbarSize(toolbarPosition, 65);
                ToolbarState = 'Collapsed';
            }else{
            ConnectsIntegrationAPI.writeLogDebug('DAVEDAVEDAVE 3');
                ConnectsIntegrationAPI.setCustomToolbarSize(toolbarPosition, 300);
                ToolbarState = 'Expanded';
            }

            ConnectsIntegrationAPI.writeLogDebug('DAVEDAVEDAVE END');

        }

        //This function exists to prevent CCCM-28337 from occurring. The enter key is generating an event that is
        //causing the page to lose its reference to the functions imported in the ConnectsIntegrationAPI library.
        //When the user tries to search for a phone number by clicking the enter key, then expand the Search Directory,
        //the call to setCustomToolbarSize is ignored, because the reference is lost. Preventing the enter key from 
        //generating an event solves this issue.
        function preventEnter(event){
            if(event.keyCode === 13){//13 is the Enter key
                event.preventDefault();
            }
        }

        function sendClickedNumberToDialer(clickedNumber){
            ConnectsIntegrationAPI.writeLogDebug('sendClickedNumberToDialer(): clickedNumber: ' + clickedNumber);
            ConnectsIntegrationAPI.makeCall(clickedNumber, function(response){
                if(!response.success) {
                    ConnectsIntegrationAPI.showError("USER", "makeCall failed", response.error);
                }
            });
        }

        function copyClickedNumberToClipboard(clickedNumber){
            ConnectsIntegrationAPI.writeLogDebug('copyClickedNumberToClipboard(): clickedNumber: ' + clickedNumber);
            //from https://gist.github.com/nithesh1992/dc66708bde9ab94313a731a715fef9ad
            // Create an auxiliary hidden input
            let aux = document.createElement('input');
            // Get the text from the element passed into the input
            aux.setAttribute('value', clickedNumber);
            // Append the aux input to the body
            document.body.appendChild(aux);
            // Highlight the content
            aux.select();
            // Execute the copy command
            document.execCommand('copy');
            // Remove the input from the body
            document.body.removeChild(aux);
        }
    </script>
</apex:page>