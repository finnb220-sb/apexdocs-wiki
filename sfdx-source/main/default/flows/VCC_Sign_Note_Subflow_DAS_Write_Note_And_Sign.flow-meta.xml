<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Invoking the DAS Save Note and Encounter Apex Invocable Action and setting the input values.</description>
        <name>Invoke_DAS_Save_Note_and_Encounter_Apex_Action</name>
        <label>Invoke DAS Save Note and Encounter Apex Action</label>
        <locationX>314</locationX>
        <locationY>350</locationY>
        <actionName>VCC_DASFlowSaveNoteAndEncounter</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>What_was_the_result_of_Save_Note_And_Encounter</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Set_faultMessage_for_Save_Note_And_Encounter</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>noteAndEncounterLocationIen</name>
            <value>
                <elementReference>noteAndEncounterParams.noteAndEncounterLocationIen</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>noteAndEncounterNoteTitleIen</name>
            <value>
                <elementReference>noteAndEncounterParams.noteAndEncounterNoteTitleIen</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>noteAndEncounterVisitRelatedTos</name>
            <value>
                <elementReference>noteAndEncounterParams.noteAndEncounterVisitRelatedTos</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>patientLocalPid</name>
            <value>
                <elementReference>patientAndProviderParams.patientLocalPid</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>patientLocalSiteId</name>
            <value>
                <elementReference>patientAndProviderParams.patientLocalSiteId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>patientName</name>
            <value>
                <elementReference>patientAndProviderParams.patientName</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>primaryDiagnosis</name>
            <value>
                <elementReference>noteAndEncounterParams.primaryDiagnosis</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>procedureCode</name>
            <value>
                <elementReference>noteAndEncounterParams.procedureCode</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>providerUserId</name>
            <value>
                <elementReference>patientAndProviderParams.providerUserId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>secondaryDiagnosis</name>
            <value>
                <elementReference>noteAndEncounterParams.secondaryDiagnosis</elementReference>
            </value>
        </inputParameters>
        <nameSegment>VCC_DASFlowSaveNoteAndEncounter</nameSegment>
        <offset>0</offset>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Invoking the Generate Encounter String Apex action.</description>
        <name>Invoke_Generate_Encounter_String_Apex_Action</name>
        <label>Invoke Generate Encounter String Apex Action</label>
        <locationX>1106</locationX>
        <locationY>242</locationY>
        <actionName>VCC_DASFlowGenerateEncounterString</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Set_encounterString_for_Generate_Encounter_String</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Set_faultMessage_for_Generate_Encounter_String</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>noteAndEncounterParameters</name>
            <value>
                <elementReference>noteAndEncounterParams</elementReference>
            </value>
        </inputParameters>
        <nameSegment>VCC_DASFlowGenerateEncounterString</nameSegment>
        <offset>0</offset>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Invoking the DAS Write Note and Sign Apex action and setting the input values.</description>
        <name>Invoke_Write_Note_and_Sign_Apex_Action</name>
        <label>Invoke Write Note and Sign Apex Action</label>
        <locationX>864</locationX>
        <locationY>1142</locationY>
        <actionName>VCC_DASFlowWriteNoteAndSign</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Assignments_After_Write_Note_and_Sign</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Set_Write_Note_And_Sign_Fault_Message</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>authorDUZ</name>
            <value>
                <elementReference>patientAndProviderParams.authorDUZ</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>encounterString</name>
            <value>
                <elementReference>noteAndEncounterParams.encounterString</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>esig</name>
            <value>
                <elementReference>patientAndProviderParams.eSig</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>patientLocalPid</name>
            <value>
                <elementReference>patientAndProviderParams.patientLocalPid</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>patientLocalSiteId</name>
            <value>
                <elementReference>patientAndProviderParams.patientLocalSiteId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>patientName</name>
            <value>
                <elementReference>patientAndProviderParams.patientName</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>progressNote</name>
            <value>
                <elementReference>ProgressNoteRecord_DAS</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>providerLoginSiteCode</name>
            <value>
                <elementReference>patientAndProviderParams.providerLoginSiteCode</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>providerName</name>
            <value>
                <elementReference>patientAndProviderParams.providerName</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>providerUserId</name>
            <value>
                <elementReference>patientAndProviderParams.providerUserId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>titleIEN</name>
            <value>
                <elementReference>noteAndEncounterParams.noteAndEncounterNoteTitleIen</elementReference>
            </value>
        </inputParameters>
        <nameSegment>VCC_DASFlowWriteNoteAndSign</nameSegment>
        <offset>0</offset>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>61.0</apiVersion>
    <assignments>
        <description>Setting the SaveNoteEncounterSuccess boolean to true.</description>
        <name>Assign_SaveNoteEncounterSuccess_to_True</name>
        <label>Assign SaveNoteEncounterSuccess to True</label>
        <locationX>578</locationX>
        <locationY>674</locationY>
        <assignmentItems>
            <assignToReference>saveNoteEncounterSuccess</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_noteAndEncounterParams_encounterString</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigning results of the Write Note and Sign to variables</description>
        <name>Assigning_Variables_from_Write_Note_and_Sign</name>
        <label>Assigning Variables from Write Note and Sign</label>
        <locationX>561</locationX>
        <locationY>1466</locationY>
        <assignmentItems>
            <assignToReference>ProgressNoteRecord_DAS.VCC_DasLastErrorCode__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Invoke_Write_Note_and_Sign_Apex_Action.errorCode</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>errorCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Invoke_Write_Note_and_Sign_Apex_Action.errorCode</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_DAS_Last_Error_Code_on_Progress_Note</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigning variables after the Write Note and Sign</description>
        <name>Assignments_After_Write_Note_and_Sign</name>
        <label>Assignments After Write Note and Sign</label>
        <locationX>864</locationX>
        <locationY>1250</locationY>
        <assignmentItems>
            <assignToReference>noteOrAddendumIen</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Invoke_Write_Note_and_Sign_Apex_Action.noteOrAddendumIen</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>errorCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Invoke_Write_Note_and_Sign_Apex_Action.errorCode</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>errorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Invoke_Write_Note_and_Sign_Apex_Action.errorMessage</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>What_was_the_result_of_Write_Note_And_Sign</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Setting the boolean variable &apos;boolean_isCodeSetError_out&apos; to true if the there is a code set error.</description>
        <name>Set_CodeSet_Error_Flag_to_true</name>
        <label>Set CodeSet Error Flag to &apos;true&apos;</label>
        <locationX>50</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>faultFlag_CodeAssignmentSubflow</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Assigning the Encounter String to a variable</description>
        <name>Set_encounterString_for_Generate_Encounter_String</name>
        <label>Set encounterString for Generate Encounter String</label>
        <locationX>1106</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>encounterString</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Invoke_Generate_Encounter_String_Apex_Action.encounterString</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_noteAndEncounterParams_encounterString</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Saving the encounter string to a variable</description>
        <name>Set_encounterString_for_Save_Note_And_Encounter</name>
        <label>Set encounterString for Save Note And Encounter</label>
        <locationX>578</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>encounterString</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Invoke_DAS_Save_Note_and_Encounter_Apex_Action.text</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_SaveNoteEncounterSuccess_to_True</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Setting the fault variables so we can display the fault to the user from the main DAS sign note flow.</description>
        <name>Set_fault_variables</name>
        <label>Set fault variables</label>
        <locationX>836</locationX>
        <locationY>2390</locationY>
        <assignmentItems>
            <assignToReference>faultFlag_DisplayFlowError</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>faultMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>{!Invoke_Write_Note_and_Sign_Apex_Action.errorMessage}{!Invoke_Write_Note_and_Sign_Apex_Action.errorDescription}</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Setting faultFlag_ResumeConsolidatedEndpoing to true so we can launch that subflow from the main flow to handle the errors.</description>
        <name>Set_faultFlag_ResumeConsolidatedEndpoint</name>
        <label>Set faultFlag_ResumeConsolidatedEndpoint</label>
        <locationX>286</locationX>
        <locationY>1790</locationY>
        <assignmentItems>
            <assignToReference>faultFlag_ResumeConsolidatedEndpoint</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Setting the faultMessage and the faultFlag_DisplayFlowError to true in order to display the fault info to the user from the main sign note flow.</description>
        <name>Set_faultMessage_for_Generate_Encounter_String</name>
        <label>Set faultMessage for Generate Encounter String</label>
        <locationX>1370</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>faultMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>faultFlag_DisplayFlowError</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Setting the faultMessage and the faultFlag_DisplayFlowError to true in order to display the fault info to the user from the main sign note flow.</description>
        <name>Set_faultMessage_for_Save_Note_And_Encounter</name>
        <label>Set faultMessage for Save Note And Encounter</label>
        <locationX>842</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>faultMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>faultFlag_DisplayFlowError</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Setting faultOccurred to false since it was successful.</description>
        <name>Set_faultOccurred_to_false</name>
        <label>Set faultOccurred to &apos;false&apos;</label>
        <locationX>1166</locationX>
        <locationY>1466</locationY>
        <assignmentItems>
            <assignToReference>faultOccurred</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>systemModifiedOutputToVista</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Invoke_Write_Note_and_Sign_Apex_Action.systemModifiedOutputToVista</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Indicating there was an invalid esig</description>
        <name>Set_Invalid_Esig_flag_to_true</name>
        <label>Set Invalid Esig flag to &apos;true&apos;</label>
        <locationX>550</locationX>
        <locationY>2006</locationY>
        <assignmentItems>
            <assignToReference>faultFlag_RevalidateEsig</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Setting fault variables</description>
        <name>Set_isEncounter_Fault_Variables</name>
        <label>Set isEncounter Fault Variables</label>
        <locationX>1634</locationX>
        <locationY>242</locationY>
        <assignmentItems>
            <assignToReference>faultFlag_DisplayFlowError</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>faultMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>DAS Write Note And Sign Flow did not receive input for &apos;isEncounterable&apos;</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Setting the encounterString.</description>
        <name>Set_noteAndEncounterParams_encounterString</name>
        <label>Set noteAndEncounterParams.encounterString</label>
        <locationX>864</locationX>
        <locationY>1034</locationY>
        <assignmentItems>
            <assignToReference>noteAndEncounterParams.encounterString</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>encounterString</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Invoke_Write_Note_and_Sign_Apex_Action</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Setting the faultMessage and the faultFlag_DisplayFlowError to true in order to display the fault info to the user from the main sign note flow.</description>
        <name>Set_Other_Error_Variables_SaveNoteAndEncounter</name>
        <label>Set Other Error Variables</label>
        <locationX>314</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>faultFlag_DisplayFlowError</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>faultMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Invoke_DAS_Save_Note_and_Encounter_Apex_Action.text</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Setting the faultMessage and the faultFlag_DisplayFlowError to true in order to display the fault info to the user from the main sign note flow.</description>
        <name>Set_Write_Note_And_Sign_Fault_Message</name>
        <label>Set Write Note And Sign Fault Message</label>
        <locationX>1898</locationX>
        <locationY>1250</locationY>
        <assignmentItems>
            <assignToReference>faultMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>faultFlag_DisplayFlowError</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <description>Checking to see if there is an Error Code</description>
        <name>Does_Flow_Invocable_Result_Have_an_Error_Code</name>
        <label>Does Flow Invocable Result Have an Error Code?</label>
        <locationX>836</locationX>
        <locationY>1790</locationY>
        <defaultConnector>
            <targetReference>Set_fault_variables</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Outcome_1_of_Does_Flow_Invocable_Have_an_Error_Code</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>errorCode</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>errorCode</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>What_Now</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checking to see if the result has an IEN.</description>
        <name>Does_Flow_Invocable_Result_Have_an_IEN</name>
        <label>Does Flow Invocable Result Have an IEN?</label>
        <locationX>561</locationX>
        <locationY>1682</locationY>
        <defaultConnector>
            <targetReference>Does_Flow_Invocable_Result_Have_an_Error_Code</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Outcome_1_of_Does_Flow_Invocable_Result_Have_an_IEN</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Invoke_Write_Note_and_Sign_Apex_Action.noteOrAddendumIen</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Invoke_Write_Note_and_Sign_Apex_Action.noteOrAddendumIen</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_faultFlag_ResumeConsolidatedEndpoint</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checking to see if the progress note is encounterable by checking if the &apos;Creates Encounter&apos; checkbox from the Progress Note Configuration custom metadata is checked.</description>
        <name>Is_Encounterable</name>
        <label>Is Encounterable?</label>
        <locationX>864</locationX>
        <locationY>134</locationY>
        <defaultConnector>
            <targetReference>Set_isEncounter_Fault_Variables</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Unable to Determine</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>isEncounterable</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Was_the_Save_Note_and_Encounter_Already_Successful</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
        <rules>
            <name>Outcome_2_of_Is_Encounterable</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>isEncounterable</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Invoke_Generate_Encounter_String_Apex_Action</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checking to see if the Save Note and Encounter action was already successful. If so, we will skip it.</description>
        <name>Was_the_Save_Note_and_Encounter_Already_Successful</name>
        <label>Was the Save Note and Encounter Already Successful?</label>
        <locationX>94</locationX>
        <locationY>242</locationY>
        <defaultConnector>
            <targetReference>Invoke_DAS_Save_Note_and_Encounter_Apex_Action</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Successful</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>saveNoteEncounterSuccess</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_noteAndEncounterParams_encounterString</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checking the error codes to determine what action we need to take next.</description>
        <name>What_Now</name>
        <label>What Now?</label>
        <locationX>682</locationX>
        <locationY>1898</locationY>
        <defaultConnector>
            <targetReference>Set_fault_variables</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Other (Display Error)</defaultConnectorLabel>
        <rules>
            <name>Re_validate_e_Sig</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Invoke_Write_Note_and_Sign_Apex_Action.errorCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1300</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Invalid_Esig_flag_to_true</targetReference>
            </connector>
            <label>Re-validate e-Sig</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checking for an error in the encounter string.</description>
        <name>What_was_the_result_of_Save_Note_And_Encounter</name>
        <label>What was the result of Save Note And Encounter?</label>
        <locationX>314</locationX>
        <locationY>458</locationY>
        <defaultConnector>
            <targetReference>Set_encounterString_for_Save_Note_And_Encounter</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Success/No Error</defaultConnectorLabel>
        <rules>
            <name>CodeSet_error</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Invoke_DAS_Save_Note_and_Encounter_Apex_Action.text</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>is not a valid code or pointer</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Invoke_DAS_Save_Note_and_Encounter_Apex_Action.text</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>not an active ICD Code</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_CodeSet_Error_Flag_to_true</targetReference>
            </connector>
            <label>CodeSet Error</label>
        </rules>
        <rules>
            <name>Other_error</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Invoke_DAS_Save_Note_and_Encounter_Apex_Action.text</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>ERROR:</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Other_Error_Variables_SaveNoteAndEncounter</targetReference>
            </connector>
            <label>Other Error</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checking if the result of the Write Note and Sign was a Success or Error.</description>
        <name>What_was_the_result_of_Write_Note_And_Sign</name>
        <label>What was the result of Write Note And Sign?</label>
        <locationX>864</locationX>
        <locationY>1358</locationY>
        <defaultConnector>
            <targetReference>Set_faultOccurred_to_false</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Success</defaultConnectorLabel>
        <rules>
            <name>Error</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Invoke_Write_Note_and_Sign_Apex_Action.isError</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assigning_Variables_from_Write_Note_and_Sign</targetReference>
            </connector>
            <label>Error</label>
        </rules>
    </decisions>
    <description>1.16.0 CCCM-32626 - Subflow of the DAS Sign Note Flow that handles the two note scenarios: encounter and non-encounter notes
1.17.1 CCCM-41710 Removed Retry</description>
    <environments>Default</environments>
    <interviewLabel>VCC Sign Note Subflow: DAS Write Note And Sign {!$Flow.CurrentDateTime}</interviewLabel>
    <label>VCC Sign Note Subflow: DAS Write Note And Sign</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordUpdates>
        <description>Updating the DAS Last Error Code field on the Progress Note record.</description>
        <name>Update_DAS_Last_Error_Code_on_Progress_Note</name>
        <label>Update DAS Last Error Code on Progress Note</label>
        <locationX>561</locationX>
        <locationY>1574</locationY>
        <connector>
            <targetReference>Does_Flow_Invocable_Result_Have_an_IEN</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ProgressNoteRecord_DAS.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>VCC_DasLastErrorCode__c</field>
            <value>
                <elementReference>errorCode</elementReference>
            </value>
        </inputAssignments>
        <object>VCC_Progress_Note__c</object>
    </recordUpdates>
    <start>
        <locationX>738</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Is_Encounterable</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <description>Stores the encounter string</description>
        <name>encounterString</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores the error code, if any, from the DAS API call</description>
        <name>errorCode</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores the error message from the attempt.</description>
        <name>errorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Boolean that is true if there is a code set error</description>
        <name>faultFlag_CodeAssignmentSubflow</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Set to true when a fault occurs that is not recoverable, and the parent flow should just display the error message stored in output variable &apos;faultMessage&apos;. If in the future there is a (previously unidentified) scenario where we can recover, this flow should be updated to add a new output variable with the naming convention &apos;faultFlag_WhatToDo&apos;.</description>
        <name>faultFlag_DisplayFlowError</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Boolean that is True if we need to launch the Resume Consolidated Endpoint subflow from the main DAS sign note flow.</description>
        <name>faultFlag_ResumeConsolidatedEndpoint</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Indicates that the e-Signature is invalid.</description>
        <name>faultFlag_RevalidateEsig</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Stores the fault message</description>
        <name>faultMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Boolean that is true if a fault occurred.</description>
        <name>faultOccurred</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>true</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Boolean variable that is true of the progress note is an encounterable one as indicated in the custom metadata. This is passed in from the main DAS sign note flow.</description>
        <name>isEncounterable</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>The note and encounter parameters from the apex class VCC_Vdif_NoteAndEncounterParams</description>
        <name>noteAndEncounterParams</name>
        <apexClass>VCC_Vdif_NoteAndEncounterParams</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the IEN</description>
        <name>noteOrAddendumIen</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>The patient and provider parameters from the apex class VCC_Vdif_PatientAndProviderParams</description>
        <name>patientAndProviderParams</name>
        <apexClass>VCC_Vdif_PatientAndProviderParams</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Variable storing the progress note record</description>
        <name>ProgressNoteRecord_DAS</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>VCC_Progress_Note__c</objectType>
    </variables>
    <variables>
        <description>Stores the progress note record id</description>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Equals true if the Save Note and Encounter apex action was successful.</description>
        <name>saveNoteEncounterSuccess</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Is true if user input was modified during the process of sending the note to VistA (via DIP/VDIF).</description>
        <name>systemModifiedOutputToVista</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Counting the number of times we have retried the apex action.</description>
        <name>varNumberOfRetries</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
</Flow>
