<?xml version="1.0" encoding="UTF-8" ?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Adding a log entry for the error.</description>
        <name>Add_Log_Entry</name>
        <label>Add Log Entry</label>
        <locationX>446</locationX>
        <locationY>2351</locationY>
        <actionName>FlowLogEntry</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>flowName</name>
            <value>
                <stringValue>VCC_Create_Metrics_Records</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>message</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>saveLog</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>FlowLogEntry</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Logging a fault entry for the Get Custom Metadata action.</description>
        <name>Add_Log_Entry_for_Get_Action</name>
        <label>Add Log Entry for Get Action</label>
        <locationX>314</locationX>
        <locationY>1595</locationY>
        <actionName>FlowLogEntry</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>flowName</name>
            <value>
                <stringValue>VCC_Create_Metrics_Records</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>message</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>saveLog</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>FlowLogEntry</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Adding a log entry if there is a fault for the Get Case Metrics record flow action.</description>
        <name>Add_Log_Entry_for_Get_Case_Metrics_Record</name>
        <label>Add Log Entry for Get Case Metrics Record</label>
        <locationX>952</locationX>
        <locationY>647</locationY>
        <actionName>FlowLogEntry</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>flowName</name>
            <value>
                <stringValue>VCC_Create_Metrics_Records</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>message</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>saveLog</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>FlowLogEntry</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Adding log entry for fault on the Get Case Metrics Record types flow action.</description>
        <name>Add_Log_Entry_for_Get_Case_Metrics_Record_Types_Action</name>
        <label>Add Log Entry for Get Case Metrics Record Types Action</label>
        <locationX>1018</locationX>
        <locationY>2027</locationY>
        <actionName>FlowLogEntry</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>flowName</name>
            <value>
                <stringValue>VCC_Create_Metrics_Records</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>message</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>saveLog</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>FlowLogEntry</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Adding a log entry if there is a fault in the Get Parent Case flow action.</description>
        <name>Add_Log_Entry_for_the_Get_Parent_Case_Action</name>
        <label>Add Log Entry for the Get Parent Case Action</label>
        <locationX>1546</locationX>
        <locationY>431</locationY>
        <actionName>FlowLogEntry</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>flowName</name>
            <value>
                <stringValue>VCC_Create_Metrics_Records</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>message</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>saveLog</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>FlowLogEntry</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Adding a log entry for the fault on the update action.</description>
        <name>Add_Log_Entry_for_Update_Action</name>
        <label>Add Log Entry for Update Action</label>
        <locationX>512</locationX>
        <locationY>863</locationY>
        <actionName>FlowLogEntry</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>flowName</name>
            <value>
                <stringValue>VCC_Create_Case_Metrics</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>message</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>saveLog</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>FlowLogEntry</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>60.0</apiVersion>
    <assignments>
        <description>Assigning the VISN of the Queue that owns the record to the VISN variable for the Case Metrics record.</description>
        <name>Assign_the_VISN_of_the_Queue_to_the_VISN_Variable</name>
        <label>Assign the VISN of the Queue to the VISN Variable</label>
        <locationX>50</locationX>
        <locationY>1595</locationY>
        <assignmentItems>
            <assignToReference>VISN</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Custom_Metadata_for_the_Queue_Mapping.VCC_VISN_Name__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Case_Metrics_Record_Types</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigning the VISN from the User&apos;s Division field to the VISN variable for the Case Metrics record.</description>
        <name>Assign_User_s_VISN_to_the_VISN_Variable</name>
        <label>Assign User&apos;s VISN to the VISN Variable</label>
        <locationX>578</locationX>
        <locationY>1487</locationY>
        <assignmentItems>
            <assignToReference>VISN</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Owner:User.Division</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Case_Metrics_Record_Types</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assigning_Values_for_Case_Metrics_Record</name>
        <label>Assigning Values for Case Metrics Record</label>
        <locationX>446</locationX>
        <locationY>2027</locationY>
        <assignmentItems>
            <assignToReference>caseMetricsRecord.VCC_VISN__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VISN</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>caseMetricsRecord.VCC_Case__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>caseMetricsRecord.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Case_Metrics_Record_Types.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Is_Create_or_Update</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Determining if there was a Case Metrics Record found that is associated with the Parent Case found.</description>
        <name>Case_Metrics_Record_Found_for_Parent_Case</name>
        <label>Case Metrics Record Found for Parent Case?</label>
        <locationX>512</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>Determine_Record_Type</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_MetricsRecordFoundForParentCase</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_the_Case_Metrics_Record_for_the_Parent_Case.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_the_Child_Case_Field_on_the_Case_Metrics_Record_for_the_Parent_Case</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determining the Record Type of the Case</description>
        <name>Determine_Record_Type</name>
        <label>Determine Record Type</label>
        <locationX>864</locationX>
        <locationY>1271</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Admin_CT_or_VCV</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>VCC_Administrative</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>VCC_Clinical_Triage</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>VCC_Vitrual_Clinic_Visit</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_the_Case_Owner_a_Queue_or_a_User</targetReference>
            </connector>
            <label>Is Admin, CT, or VCV?</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checking if the record needs created or updated</description>
        <name>Is_Create_or_Update</name>
        <label>Is Create or Update?</label>
        <locationX>446</locationX>
        <locationY>2135</locationY>
        <defaultConnectorLabel>Is Update</defaultConnectorLabel>
        <rules>
            <name>Is_Create</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_Case_Metrics_Record</targetReference>
            </connector>
            <label>Is Create</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determining if the Case Owner is a Queue or a User.</description>
        <name>Is_the_Case_Owner_a_Queue_or_a_User</name>
        <label>Is the Case Owner a Queue or a User?</label>
        <locationX>446</locationX>
        <locationY>1379</locationY>
        <defaultConnector>
            <targetReference>Get_Case_Metrics_Record_Types</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Owner_is_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Custom_Metadata_for_the_Queue_Mapping</targetReference>
            </connector>
            <label>Owner is Queue</label>
        </rules>
        <rules>
            <name>Owner_is_User</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:User.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_User_s_VISN_to_the_VISN_Variable</targetReference>
            </connector>
            <label>Owner is User</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determining if a Parent Case was found for the record that triggered the flow.</description>
        <name>Parent_Case_Found</name>
        <label>Parent Case Found?</label>
        <locationX>864</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Determine_Record_Type</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_ParentCaseFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Parent_Case.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_the_Case_Metrics_Record_for_the_Parent_Case</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>CCCM-31702
Record Triggered Flow that creates Case Metrics objects when a Clinical Triage or Admin/Scheduling Case is created.</description>
    <environments>Default</environments>
    <formulas>
        <description>Checking if the record is new</description>
        <name>IsNew</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <interviewLabel>Create Metrics Records {!$Flow.CurrentDateTime}</interviewLabel>
    <label>VCC Create Metrics Records</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>Creating the Case Metrics record.</description>
        <name>Create_Case_Metrics_Record</name>
        <label>Create Case Metrics Record</label>
        <locationX>182</locationX>
        <locationY>2243</locationY>
        <faultConnector>
            <targetReference>Add_Log_Entry</targetReference>
        </faultConnector>
        <inputReference>caseMetricsRecord</inputReference>
    </recordCreates>
    <recordLookups>
        <description>Getting the record types for the Case Metrics object.</description>
        <name>Get_Case_Metrics_Record_Types</name>
        <label>Get Case Metrics Record Types</label>
        <locationX>446</locationX>
        <locationY>1919</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assigning_Values_for_Case_Metrics_Record</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Add_Log_Entry_for_Get_Case_Metrics_Record_Types_Action</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>VCC_Reporting</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Getting the Custom Metadata for VCC Queue Mapping so we can assign the appropriate VISN to the VISN field on the Case Metrics record when the Case Owner is a Queue.</description>
        <name>Get_Custom_Metadata_for_the_Queue_Mapping</name>
        <label>Get Custom Metadata for the Queue Mapping</label>
        <locationX>50</locationX>
        <locationY>1487</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_the_VISN_of_the_Queue_to_the_VISN_Variable</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Add_Log_Entry_for_Get_Action</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>VCC_Queue_Developer_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Owner:Group.DeveloperName</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>VCC_Queue_Mapping__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Getting the parent case of the record that triggered the flow.</description>
        <name>Get_Parent_Case</name>
        <label>Get Parent Case</label>
        <locationX>864</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Parent_Case_Found</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Add_Log_Entry_for_the_Get_Parent_Case_Action</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Parent.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Getting the Case Metrics record for the Parent Case</description>
        <name>Get_the_Case_Metrics_Record_for_the_Parent_Case</name>
        <label>Get the Case Metrics Record for the Parent Case</label>
        <locationX>512</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Case_Metrics_Record_Found_for_Parent_Case</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Add_Log_Entry_for_Get_Case_Metrics_Record</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>VCC_Case__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Parent_Case.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>VCC_Case_Metrics__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Completing the Child Case field on the Case Metrics record for the Parent Case.</description>
        <name>Update_the_Child_Case_Field_on_the_Case_Metrics_Record_for_the_Parent_Case</name>
        <label>Update the Child Case Field on the Case Metrics Record for the Parent Case</label>
        <locationX>248</locationX>
        <locationY>755</locationY>
        <connector>
            <targetReference>Determine_Record_Type</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Add_Log_Entry_for_Update_Action</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_the_Case_Metrics_Record_for_the_Parent_Case.Name</elementReference>
            </value>
        </filters>
        <filters>
            <field>VCC_Child_Case__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>VCC_Child_Case__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record.Parent.Case_Metrics__r</inputReference>
    </recordUpdates>
    <start>
        <locationX>738</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Parent_Case</targetReference>
        </connector>
        <filterFormula>{!$Permission.VCC_Disable_Metrics_Creation} = FALSE 
&amp;&amp;
{!$Permission.DisableTriggersFlag} = FALSE
&amp;&amp;
(
{!$Record.RecordType.DeveloperName} == &quot;VCC_Administrative&quot; &amp;&amp; ISNEW()
|| 
{!$Record.RecordType.DeveloperName} == &quot;VCC_Clinical_Triage&quot; &amp;&amp; ISNEW()
||
{!$Record.RecordType.DeveloperName} == &quot;VCC_Vitrual_Clinic_Visit&quot; &amp;&amp; ISCHANGED({!$Record.ParentId}) || ISNEW()
)</filterFormula>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>caseMetricsRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>VCC_Case_Metrics__c</objectType>
    </variables>
    <variables>
        <name>CaseRecords</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>childCase</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VISN</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
