name: Cascade Changes
run-name: Cascading Merge From ${{ github.ref_name }}
on:
  push:
    branches:
      - "release/*"
jobs:
  merge_forward:
    name: Cascade Changes to Next Release
    runs-on: ubuntu-latest
    outputs:
      current_branch: ${{ steps.branches.outputs.current_branch }}
      next_branch: ${{ steps.branches.outputs.next_branch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.ADMIN_TOKEN }}
          fetch-depth: 0
      - name: ðŸªª Set git name+email
        run: |
          git config user.name "Auto Merge"
          git config user.email "noreply@sf.bah.com"
      - name: Find next release branch and merge
        id: branches
        run: |
          set -eu
          current_branch=`git rev-parse --abbrev-ref HEAD`
          release_trunk=`echo "${current_branch}" | cut -d '/' -f 2`
          
          major=`echo "${release_trunk}" | cut -d '.' -f 2`
          minor=`echo "${release_trunk}" | cut -d '.' -f 3`
          if [[ "${minor}" = "1" ]]
          then
              next_major=$(( major + 1 ))
              next_minor="0"
          else
              next_major="${major}"
              next_minor="1"
          fi
          next_branch="release/1.${next_major}.${next_minor}"
          
          echo "Next Branch is: ${next_branch}"
          echo "current_branch=${current_branch}" >> $GITHUB_OUTPUT
          echo "next_branch=${next_branch}" >> $GITHUB_OUTPUT
          if git branch -r --format "%(refname:short)" | grep "^origin/${next_branch}$"
          then
            echo "Merging ${current_branch} -> ${next_branch}"
            git checkout "${next_branch}"
            git merge "${current_branch}"
            git push
          else
            echo "No next branch, doing nothing"
          fi
          release_trunk=`echo "${current_branch}" | cut -d '/' -f 3`
          if git tag | grep "^freeze/${release_trunk}$"
          then
            echo "This branch is post code freeze"
          else
            echo "Deploying to normal environment"
          fi
  capture_workflow_failure_result:
    runs-on: ubuntu-latest
    needs: [merge_forward]
    if: ${{ failure() }}
    env:
      current_branch: ${{needs.merge_forward.outputs.current_branch}}
      next_branch: ${{needs.merge_forward.outputs.next_branch}}
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
    steps:
    - name: ðŸ›Ž Checkout
      uses: actions/checkout@v4.1.7
      with:
        token: ${{ secrets.ADMIN_TOKEN }}
        fetch-depth: "0"
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: vahc-cicd-alerts
        SLACK_COLOR: '#ff0000'
        SLACK_ICON: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        SLACK_MESSAGE: "@channel Branch: ${{github.head_ref}}"
        SLACK_TITLE: "Job Failed - Cascade Change"
        SLACK_USERNAME: github
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_LINK_NAMES: true
        MSG_MINIMAL: actions url
        SLACK_FOOTER: ""
    - name: Create PR
      id: create_pr
      run: |
          release_trunk=`echo "${current_branch}" | cut -d '/' -f 2`
          merge_branch="merge/${release_trunk}"
          echo "Creating new branch from ${current_branch} -> ${merge_branch}"
          git checkout -b $merge_branch $current_branch
          git push origin $merge_branch
          echo "Merging ${merge_branch} -> ${next_branch}"
          gh pr create --base $next_branch --head $merge_branch --title "MERGE CONFLICT: $current_branch has a conflict with $next_branch" --body "Please resolve the manual conflicts and merge this PR."
