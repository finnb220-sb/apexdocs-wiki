<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>56.0</apiVersion>
    <decisions>
        <name>Current_state_found</name>
        <label>Current state found?</label>
        <locationX>578</locationX>
        <locationY>278</locationY>
        <defaultConnectorLabel>Current state was not found</defaultConnectorLabel>
        <rules>
            <name>Current_state_was_found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_user_s_current_status.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>User_currently_paused</targetReference>
            </connector>
            <label>Current state was found</label>
        </rules>
    </decisions>
    <decisions>
        <name>User_currently_paused</name>
        <label>User currently paused?</label>
        <locationX>314</locationX>
        <locationY>398</locationY>
        <defaultConnectorLabel>User in other state</defaultConnectorLabel>
        <rules>
            <name>User_is_paused</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_user_s_current_status.ServicePresenceStatus.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PC_Wrap_Up</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_available_status</targetReference>
            </connector>
            <label>User is paused</label>
        </rules>
        <rules>
            <name>User_is_not_paused</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_user_s_current_status.ServicePresenceStatus.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PC_Available_Provider_Connect</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_wrap_up_status</targetReference>
            </connector>
            <label>User is not paused</label>
        </rules>
    </decisions>
    <description>Provider Connect Flow - used to check if the user is in a Paused or Unpaused state within via User Presence.</description>
    <environments>Default</environments>
    <interviewLabel>PC Pause and Unpause Users {!$Flow.CurrentDateTime}</interviewLabel>
    <label>PC Pause and Unpause Users</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_available_status</name>
        <label>Get available status</label>
        <locationX>50</locationX>
        <locationY>518</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_user_to_active</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>PC_Available_Provider_Connect</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ServicePresenceStatus</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_user_s_current_status</name>
        <label>Get user&apos;s current status</label>
        <locationX>578</locationX>
        <locationY>158</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Current_state_found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>UserId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsCurrentState</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>UserServicePresence</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_wrap_up_status</name>
        <label>Get wrap up status</label>
        <locationX>314</locationX>
        <locationY>518</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_user_to_wrap_up</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>PC_Wrap_Up</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ServicePresenceStatus</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Set_user_to_active</name>
        <label>Set user to active</label>
        <locationX>50</locationX>
        <locationY>638</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_user_s_current_status.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>ServicePresenceStatusId</field>
            <value>
                <elementReference>Get_available_status.Id</elementReference>
            </value>
        </inputAssignments>
        <object>UserServicePresence</object>
    </recordUpdates>
    <recordUpdates>
        <name>Set_user_to_wrap_up</name>
        <label>Set user to wrap up</label>
        <locationX>314</locationX>
        <locationY>638</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_user_s_current_status.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>ServicePresenceStatusId</field>
            <value>
                <elementReference>Get_wrap_up_status.Id</elementReference>
            </value>
        </inputAssignments>
        <object>UserServicePresence</object>
    </recordUpdates>
    <start>
        <locationX>452</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_user_s_current_status</targetReference>
        </connector>
    </start>
    <status>Active</status>
</Flow>
