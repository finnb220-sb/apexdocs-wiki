<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>57.0</apiVersion>
    <assignments>
        <description>Assigns the selected case reasons multi picklist to flow var</description>
        <name>Assign_Selected_Case_Reasons</name>
        <label>Assign Selected Case Reasons</label>
        <locationX>996</locationX>
        <locationY>3011</locationY>
        <assignmentItems>
            <assignToReference>Selected_Case_Reasons</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.VCC_Case_Reason_Multi__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Pharmacy_Case_Subject</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_to_appt_Queue</name>
        <label>Assign to appt Queue</label>
        <locationX>1524</locationX>
        <locationY>1703</locationY>
        <assignmentItems>
            <assignToReference>$Record.VCC_Queue_type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>APPTQueueTypeText</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_to_MSA_Queue</name>
        <label>Assign to MSA Queue</label>
        <locationX>468</locationX>
        <locationY>1703</locationY>
        <assignmentItems>
            <assignToReference>$Record.VCC_Queue_type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>msaQueueTypeText</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_to_Pharmacy_TIER_I_Queue</name>
        <label>Assign to Pharmacy TIER I Queue</label>
        <locationX>1260</locationX>
        <locationY>1703</locationY>
        <assignmentItems>
            <assignToReference>$Record.VCC_Queue_type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>PHARMTIER_I_QueueTypeText</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_to_Pharmacy_TIER_II_Queue</name>
        <label>Assign to Pharmacy TIER II Queue</label>
        <locationX>996</locationX>
        <locationY>1703</locationY>
        <assignmentItems>
            <assignToReference>$Record.VCC_Queue_type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>PHARMTIER_II_QueueTypeText</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_to_Pharmacy_TIER_III_Queue</name>
        <label>Assign to Pharmacy TIER III Queue</label>
        <locationX>732</locationX>
        <locationY>1703</locationY>
        <assignmentItems>
            <assignToReference>$Record.VCC_Queue_type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>PHARMTIER_III_QueueTypeText</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_to_RN_Queue</name>
        <label>Assign to RN Queue</label>
        <locationX>204</locationX>
        <locationY>1703</locationY>
        <assignmentItems>
            <assignToReference>$Record.VCC_Queue_type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>RNQueueTypeText</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Change_Type_to_Administrative</name>
        <label>Change Type to Administrative</label>
        <locationX>732</locationX>
        <locationY>2003</locationY>
        <assignmentItems>
            <assignToReference>$Record.VCC_Case_Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Administrative</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_User</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Change_Type_to_Pharmacy</name>
        <label>Change Type to Pharmacy</label>
        <locationX>1260</locationX>
        <locationY>2003</locationY>
        <assignmentItems>
            <assignToReference>$Record.VCC_Case_Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Pharmacy</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_User</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Change_Type_to_Symptom</name>
        <label>Change Type to Symptom</label>
        <locationX>996</locationX>
        <locationY>2003</locationY>
        <assignmentItems>
            <assignToReference>$Record.VCC_Case_Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Symptom</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_User</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Change_Type_to_VCV</name>
        <label>Change Type to VCV</label>
        <locationX>468</locationX>
        <locationY>2003</locationY>
        <assignmentItems>
            <assignToReference>$Record.VCC_Case_Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>VCV</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_User</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Copy_1_of_Update_Caller_Info_on_Case_Self</name>
        <label>Update Caller Info on Case Self</label>
        <locationX>314</locationX>
        <locationY>1151</locationY>
        <assignmentItems>
            <assignToReference>$Record.VCC_Caller_Name__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varCallerName</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.VCC_Caller_Relation__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Task.VCC_Relative_Type_Picklist__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.VCC_Date_Patient_Verified__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Task.VCC_Patient_Verified_DateTime__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.VCC_Relation_Type_Other__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Task.VCC_Relative_Type__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_Queue_Owner</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Callback_Location</name>
        <label>Set Callback &amp; Location</label>
        <locationX>798</locationX>
        <locationY>503</locationY>
        <assignmentItems>
            <assignToReference>$Record.VCC_Call_back_phone_number__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>callbackNumber</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.VCC_Current_location__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>currentLocation</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Is_Case_Record_Type_CT_MSA_or_Pharm</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_Caller_Info_on_Case</name>
        <label>Update Caller Info on Case</label>
        <locationX>578</locationX>
        <locationY>1151</locationY>
        <assignmentItems>
            <assignToReference>$Record.VCC_Caller_Name__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Task.VCC_Name__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.VCC_Caller_Relation__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Task.VCC_Relative_Type_Picklist__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.VCC_Date_Patient_Verified__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Task.VCC_Patient_Verified_DateTime__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.VCC_Relation_Type_Other__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Task.VCC_Relative_Type__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_Queue_Owner</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_Caller_Info_on_Case_Not_Applicable</name>
        <label>Update Caller Info on Case Not Applicable</label>
        <locationX>50</locationX>
        <locationY>1151</locationY>
        <assignmentItems>
            <assignToReference>$Record.VCC_Caller_Name__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Task.VCC_Name__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.VCC_Date_Patient_Verified__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Task.VCC_Patient_Verified_DateTime__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.VCC_Relation_Type_Other__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Task.VCC_Relative_Type__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_Queue_Owner</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_Case_VISN_with_Parent_Case_s_User_Division</name>
        <label>Update Case.VISN with Parent Case&apos;s User.Division</label>
        <locationX>512</locationX>
        <locationY>2627</locationY>
        <assignmentItems>
            <assignToReference>$Record.VISN__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_User_of_Parent_Case.Division</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Subject_needs_to_be_created</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_Case_VISN_with_User_Division</name>
        <label>Update Case.VISN with User.Division</label>
        <locationX>776</locationX>
        <locationY>2519</locationY>
        <assignmentItems>
            <assignToReference>$Record.VISN__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varUserDivision</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Subject_needs_to_be_created</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Updates the Pharmacy Case Subject field with the Case Sub Type and Case Reasons</description>
        <name>Update_Pharmacy_Case_Subject</name>
        <label>Update Pharmacy Case Subject</label>
        <locationX>996</locationX>
        <locationY>3119</locationY>
        <assignmentItems>
            <assignToReference>$Record.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>PharmacyCaseSubjectLenValidation</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Updates the subject field from the UpdateSubjectFormula field</description>
        <name>Update_Subject_Field</name>
        <label>Update Subject Field</label>
        <locationX>732</locationX>
        <locationY>3011</locationY>
        <assignmentItems>
            <assignToReference>$Record.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>UpdateSubjectFormula</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <name>Check_Queue_Owner</name>
        <label>Check Queue Owner</label>
        <locationX>996</locationX>
        <locationY>1595</locationY>
        <defaultConnector>
            <targetReference>Update_Case</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_it_RN_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>_RN</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_to_RN_Queue</targetReference>
            </connector>
            <label>Is it RN Queue</label>
        </rules>
        <rules>
            <name>Is_it_MSA_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>_MSA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_to_MSA_Queue</targetReference>
            </connector>
            <label>Is it MSA Queue</label>
        </rules>
        <rules>
            <name>Is_it_PHARM_TIER_III_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>_PHARM_TIER_III</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_to_Pharmacy_TIER_III_Queue</targetReference>
            </connector>
            <label>Is it PHARM TIER III Queue</label>
        </rules>
        <rules>
            <name>Is_It_Pharm_Tier_II_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>_PHARM_TIER_II</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_to_Pharmacy_TIER_II_Queue</targetReference>
            </connector>
            <label>Is It Pharm Tier II Queue</label>
        </rules>
        <rules>
            <name>Is_it_Pharm_Tier_I_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>_PHARM_TIER_I</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_to_Pharmacy_TIER_I_Queue</targetReference>
            </connector>
            <label>Is it Pharm Tier I Queue</label>
        </rules>
        <rules>
            <name>Is_it_APPT_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>_APPT</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_to_appt_Queue</targetReference>
            </connector>
            <label>Is it APPT Queue</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check to see if the case record type name matches CT/MSA/Pharm</description>
        <name>Is_Case_Record_Type_CT_MSA_or_Pharm</name>
        <label>Is Case Record Type CT/MSA or Pharm</label>
        <locationX>798</locationX>
        <locationY>611</locationY>
        <defaultConnector>
            <targetReference>Check_Queue_Owner</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Clinical</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Administrative</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Pharmacy</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Record_Type</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Does Task.WhatId = Record.AccountId OR Task.WhoId = Record.ContactId</description>
        <name>Is_task_related_to_account_or_contact</name>
        <label>Is task related to account or contact?</label>
        <locationX>578</locationX>
        <locationY>935</locationY>
        <defaultConnector>
            <targetReference>Check_Queue_Owner</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Equal</name>
            <conditionLogic>(1 AND 3) OR (2 AND 4)</conditionLogic>
            <conditions>
                <leftValueReference>Get_Task.WhatId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Get_Account.Id</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Task.WhoId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Get_Account.PersonContactId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Task.WhatId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Task.WhoId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>isnotApplicable</targetReference>
            </connector>
            <label>Is Equal</label>
        </rules>
    </decisions>
    <decisions>
        <description>The caller&apos;s relation to the Veteran is selected as &quot;Not Applicable&quot;</description>
        <name>isnotApplicable</name>
        <label>isNotApplicable</label>
        <locationX>314</locationX>
        <locationY>1043</locationY>
        <defaultConnector>
            <targetReference>Update_Caller_Info_on_Case</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>notApplicable</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Task.VCC_Relative_Type_Picklist__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Not Applicable</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Caller_Info_on_Case_Not_Applicable</targetReference>
            </connector>
            <label>notApplicable</label>
        </rules>
        <rules>
            <name>Self</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Task.VCC_Relative_Type_Picklist__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Self</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Update_Caller_Info_on_Case_Self</targetReference>
            </connector>
            <label>Self</label>
        </rules>
    </decisions>
    <decisions>
        <description>Insert vs Update only logic. All other non-specific DML logic can be included after this decision element.</description>
        <name>On_DML</name>
        <label>On DML</label>
        <locationX>996</locationX>
        <locationY>287</locationY>
        <defaultConnector>
            <targetReference>Check_Queue_Owner</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>On Update</defaultConnectorLabel>
        <rules>
            <name>On_Insert</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Account</targetReference>
            </connector>
            <label>On Insert</label>
        </rules>
    </decisions>
    <decisions>
        <name>Owned_by_a_Queue_or_User</name>
        <label>Owned by a Queue or User?</label>
        <locationX>776</locationX>
        <locationY>2411</locationY>
        <defaultConnector>
            <targetReference>Subject_needs_to_be_created</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Owned_by_a_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.CreatedById</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Parent.CreatedById</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ParentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_User_of_Parent_Case</targetReference>
            </connector>
            <label>Owned by a Queue</label>
        </rules>
        <rules>
            <name>Owned_by_a_User</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varUserDivision</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_VISN_with_User_Division</targetReference>
            </connector>
            <label>Owned by a User</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines the which operation needs to happen for updating the subject depending on the record type</description>
        <name>Subject_needs_to_be_created</name>
        <label>Subject needs to be created</label>
        <locationX>996</locationX>
        <locationY>2903</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Create_Subject</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>VCC_Administrative</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>VCC_Clinical_Triage</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Subject_Field</targetReference>
            </connector>
            <label>Create Subject</label>
        </rules>
        <rules>
            <name>Create_Subject_for_Pharmacy_Cases</name>
            <conditionLogic>(1 AND  2 AND (3 OR 4))</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>VCC_Pharmacy</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.VCC_Case_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pharmacy</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.VCC_Case_Sub_Type__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.VCC_Case_Reason_Multi__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Selected_Case_Reasons</targetReference>
            </connector>
            <label>Create Subject for Pharmacy Cases</label>
        </rules>
    </decisions>
    <decisions>
        <description>Workstream specific record type updates.</description>
        <name>Update_Case</name>
        <label>Updated Record Type</label>
        <locationX>996</locationX>
        <locationY>1895</locationY>
        <defaultConnector>
            <targetReference>Get_User</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Record_Type_is_Virtual_Clinic_Visit</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Virtual</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Change_Type_to_VCV</targetReference>
            </connector>
            <label>Record Type is Virtual Clinic Visit</label>
        </rules>
        <rules>
            <name>Record_Type_is_Administrative</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Admin</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Change_Type_to_Administrative</targetReference>
            </connector>
            <label>Record Type is Administrative</label>
        </rules>
        <rules>
            <name>Record_Type_is_Clinical_Triage</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Clinical</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Change_Type_to_Symptom</targetReference>
            </connector>
            <label>Record Type is Clinical Triage</label>
        </rules>
        <rules>
            <name>Record_Type_is_Pharmacy</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Pharmacy</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Change_Type_to_Pharmacy</targetReference>
            </connector>
            <label>Record Type is Pharmacy</label>
        </rules>
    </decisions>
    <decisions>
        <name>Update_Case_VISN_c_with_User_Division</name>
        <label>Update Case.VISN__c with User.Division</label>
        <locationX>996</locationX>
        <locationY>2303</locationY>
        <defaultConnector>
            <targetReference>Subject_needs_to_be_created</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>For_MSA_RN_Pharm</name>
            <conditionLogic>(1 OR 2 OR 3) AND 4 AND 5</conditionLogic>
            <conditions>
                <leftValueReference>$Record.VCC_Case_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Administrative</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.VCC_Case_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pharmacy</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.VCC_Case_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Symptom</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>formIsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>VISNformula</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Owned_by_a_Queue_or_User</targetReference>
            </connector>
            <label>For MSA, RN, Pharm</label>
        </rules>
    </decisions>
    <description>1/6/2024 : CCCM-39750 Removing Tele-Ec
11/21/2024 : CCCM-39750
Assigning the User.Division field value to the Case.VISN__c field. 

10/24/2024 : CCCM-34793
- updating the &apos;Subject needs to be created&apos; decision section to account for new Subject requirements after updating the Case Sub Type and/or Case Reasons selected from the multi-picklist.
- added formulas to ensure that the proposed subject for Pharmacy cases do not exceed 255 characters, otherwise use first 255 characters to prevent Case Subject validation error

1/27/25 : CCCM-42304
- adding a new text variable that is a concatenation of the First and Last Name of the related Account
- assigning the value of the Case.Caller_Name field to be equal to the new text variable&apos;s value

This flow performs logic before insert / update including updating the subject field, enriching Callback and Location, etc.

2/20/25: Deployment Errors To UAT2 Fix</description>
    <environments>Default</environments>
    <formulas>
        <description>Return the Account (if populated) or Case Call Back Number.</description>
        <name>callbackNumber</name>
        <dataType>String</dataType>
        <expression>IF(AND( NOT(ISNULL({!Get_Account.Id})), ISBLANK({!$Record.VCC_Call_back_phone_number__c})), {!Get_Account.VCC_Call_Back_Number__c}, {!$Record.VCC_Call_back_phone_number__c})</expression>
    </formulas>
    <formulas>
        <description>Return the Account (if populated) or Case Current Location.</description>
        <name>currentLocation</name>
        <dataType>String</dataType>
        <expression>IF( AND( NOT(ISNULL({!Get_Account.Id})), ISBLANK({!$Record.VCC_Current_Location__c})),
 {!Get_Account.VCC_Current_Location__c}, {!$Record.VCC_Current_Location__c})</expression>
    </formulas>
    <formulas>
        <name>formIsNew</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <formulas>
        <name>GetQueueType</name>
        <dataType>String</dataType>
        <expression>IF(
CONTAINS({!$Record.Owner:Group.DeveloperName},&apos;10&apos;) ||
CONTAINS({!$Record.Owner:Group.DeveloperName},&apos;11&apos;) ||
CONTAINS({!$Record.Owner:Group.DeveloperName},&apos;12&apos;) ||
CONTAINS({!$Record.Owner:Group.DeveloperName},&apos;13&apos;) ||
CONTAINS({!$Record.Owner:Group.DeveloperName},&apos;14&apos;) ||
CONTAINS({!$Record.Owner:Group.DeveloperName},&apos;15&apos;) ||
CONTAINS({!$Record.Owner:Group.DeveloperName},&apos;16&apos;) ||
CONTAINS({!$Record.Owner:Group.DeveloperName},&apos;17&apos;) ||
CONTAINS({!$Record.Owner:Group.DeveloperName},&apos;18&apos;) ||
CONTAINS({!$Record.Owner:Group.DeveloperName},&apos;19&apos;) ||
CONTAINS({!$Record.Owner:Group.DeveloperName},&apos;20&apos;) ||
CONTAINS({!$Record.Owner:Group.DeveloperName},&apos;21&apos;) ||
CONTAINS({!$Record.Owner:Group.DeveloperName},&apos;22&apos;) ||
CONTAINS({!$Record.Owner:Group.DeveloperName},&apos;23&apos;) ||
CONTAINS({!$Record.Owner:Group.DeveloperName},&apos;99&apos;) ,
MID({!$Record.Owner:Group.DeveloperName}, 8,30),
MID({!$Record.Owner:Group.DeveloperName}, 7,30)
)</expression>
    </formulas>
    <formulas>
        <description>This formula puts together the selected Case Sub Type value and the selected case reasons into a single text line to create a Pharmacy Case Subject</description>
        <name>PharmacyCaseSubject</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE(TEXT({!$Record.VCC_Case_Sub_Type__c}) + &quot; - &quot; + {!Selected_Case_Reasons}, &apos;;&apos;, &apos;; &apos;)</expression>
    </formulas>
    <formulas>
        <description>Will check if the PharamcyCaseSubject formula is less than 255 characters, otherwise default to the first 255 characters to prevent an validation error for the Case Subject field</description>
        <name>PharmacyCaseSubjectLenValidation</name>
        <dataType>String</dataType>
        <expression>IF(LEN({!PharmacyCaseSubject} ) &gt; 255, LEFT({!PharmacyCaseSubject}, 255), {!PharmacyCaseSubject})</expression>
    </formulas>
    <formulas>
        <description>This formula will combine the case sub type and the case reason</description>
        <name>UpdateSubjectFormula</name>
        <dataType>String</dataType>
        <expression>TEXT({!$Record.VCC_Case_Sub_Type__c}) &amp; &quot; &quot; &amp; TEXT({!$Record.VCC_Case_Reason__c})</expression>
    </formulas>
    <formulas>
        <description>Concatenation of the First and Last Name of the Account</description>
        <name>varCallerName</name>
        <dataType>String</dataType>
        <expression>{!Get_Account.FirstName} &amp; &apos; &apos; &amp; {!Get_Account.LastName}</expression>
    </formulas>
    <formulas>
        <description>Created to check VISN</description>
        <name>VISNformula</name>
        <dataType>Number</dataType>
        <expression>CASE( {!$User.Division},
&apos;VISN 1&apos;,1,
&apos;VISN 2&apos;,1,
&apos;VISN 4&apos;,1,
&apos;VISN 5&apos;,1,
&apos;VISN 6&apos;,1,
&apos;VISN 7&apos;,1,
&apos;VISN 8&apos;,1,
&apos;VISN 9&apos;,1,
&apos;VISN 10&apos;,1,
&apos;VISN 12&apos;,1,
&apos;VISN 15&apos;,1,
&apos;VISN 16&apos;,1,
&apos;VISN 17&apos;,1,
&apos;VISN 19&apos;,1,
&apos;VISN 20&apos;,1,
&apos;VISN 21&apos;,1,
&apos;VISN 22&apos;,1,
&apos;VISN 23&apos;,1,
0)</expression>
        <scale>2</scale>
    </formulas>
    <interviewLabel>VCC Case - Before Upsert {!$Flow.CurrentDateTime}</interviewLabel>
    <label>VCC Case - Before Upsert</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Grab the account lookup record.</description>
        <name>Get_Account</name>
        <label>Get Account</label>
        <locationX>798</locationX>
        <locationY>395</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Callback_Location</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <filters>
            <field>PersonContactId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get record type of VAHC Verify Caller</description>
        <name>Get_Record_Type</name>
        <label>Get Record Type</label>
        <locationX>578</locationX>
        <locationY>719</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Task</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>VCC_Verify_Caller</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Task</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Task</name>
        <label>Get Task</label>
        <locationX>578</locationX>
        <locationY>827</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_task_related_to_account_or_contact</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OwnerId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Record_Type.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Task</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_User</name>
        <label>Get User</label>
        <locationX>996</locationX>
        <locationY>2195</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_VISN_c_with_User_Division</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </filters>
        <object>User</object>
        <outputAssignments>
            <assignToReference>varUserDivision</assignToReference>
            <field>Division</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_User_of_Parent_Case</name>
        <label>Get User of Parent Case</label>
        <locationX>512</locationX>
        <locationY>2519</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_VISN_with_Parent_Case_s_User_Division</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Parent.Owner:User.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Division</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>870</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>On_DML</targetReference>
        </connector>
        <filterFormula>!{!$Permission.DisableTriggersFlag}
&amp;&amp; LEFT ({!$Record.RecordType.DeveloperName},4) = &quot;VCC_&quot;</filterFormula>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>APPTQueueTypeText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>_APPT</stringValue>
        </value>
    </variables>
    <variables>
        <name>msaQueueTypeText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>_MSA</stringValue>
        </value>
    </variables>
    <variables>
        <name>PHARMTIER_I_QueueTypeText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>_PHARM_TIER_I</stringValue>
        </value>
    </variables>
    <variables>
        <name>PHARMTIER_II_QueueTypeText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>_PHARM_TIER_II</stringValue>
        </value>
    </variables>
    <variables>
        <name>PHARMTIER_III_QueueTypeText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>_PHARM_TIER_III</stringValue>
        </value>
    </variables>
    <variables>
        <name>RNQueueTypeText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>_RN</stringValue>
        </value>
    </variables>
    <variables>
        <description>Case Reasons selected from multi picklist</description>
        <name>Selected_Case_Reasons</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varParentCaseVISN</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Holds the User.Division value for the logged in User</description>
        <name>varUserDivision</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
