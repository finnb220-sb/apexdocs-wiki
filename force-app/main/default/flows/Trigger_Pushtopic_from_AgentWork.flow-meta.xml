<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Adds a fault log to system if the flow fails upon attempting to get the AgentWork&apos;s associated PC Case.</description>
        <name>Fail_to_Get_PC_Case</name>
        <label>Fail to Get PC Case</label>
        <locationX>842</locationX>
        <locationY>431</locationY>
        <actionName>FlowLogEntry</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Save_Fault_Log</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>faultMessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>flowName</name>
            <value>
                <stringValue>Trigger_Pushtopic_from_AgentWork</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>message</name>
            <value>
                <stringValue>Failed to retrieve the PC Case associated with the triggering Agent Work record.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>FlowLogEntry</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Adds fault log to system if the flow fails upon invoking the apex logic that triggers the pcSuperScreen push topic</description>
        <name>Fail_to_trigger_pcSuperScreen_Push_Topic</name>
        <label>Fail to trigger pcSuperScreen Push Topic</label>
        <locationX>314</locationX>
        <locationY>647</locationY>
        <actionName>FlowLogEntry</actionName>
        <actionType>apex</actionType>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Save_Fault_Log</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>faultMessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>flowName</name>
            <value>
                <stringValue>Trigger_Pushtopic_from_AgentWork</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>message</name>
            <value>
                <stringValue>Failed to invoke the pcSuperScreen Push Topic via Agent Work trigger</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>FlowLogEntry</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Saves the fault logs to the system.</description>
        <name>Save_Fault_Log</name>
        <label>Save Fault Log</label>
        <locationX>842</locationX>
        <locationY>539</locationY>
        <actionName>Logger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>Logger</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>invokes apex that generates a PC_AWPush_Event record to trigger the pcSuperScreen push topic. This will provide a refresh of the Availability Matrix&apos;s Specialty Table so that the table will have up-to-date Specialist availability information.</description>
        <name>Trigger_pcSuperScreen_Push_Topic</name>
        <label>Trigger pcSuperScreen Push Topic</label>
        <locationX>50</locationX>
        <locationY>539</locationY>
        <actionName>PC_ChatStreamController</actionName>
        <actionType>apex</actionType>
        <faultConnector>
            <targetReference>Fail_to_trigger_pcSuperScreen_Push_Topic</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>agentWork</name>
            <value>
                <elementReference>$Record</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>pcCase</name>
            <value>
                <elementReference>Get_PC_Case</elementReference>
            </value>
        </inputParameters>
        <nameSegment>PC_ChatStreamController</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>61.0</apiVersion>
    <decisions>
        <description>Checks if the Get PC Case get records element returned a PrC Case. The Trigger Pushtopic invokable apex logic should only run for AgentWork records tied to PrC Cases.</description>
        <name>Related_WorkItem_is_a_PrC_Case</name>
        <label>Related WorkItem is PrC Case?</label>
        <locationX>314</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_PC_Case</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Trigger_pcSuperScreen_Push_Topic</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>Triggers invokable apex to send a push topic event when an AgentWork record tied to Provider Connect Case changes status</description>
    <environments>Default</environments>
    <formulas>
        <name>IsNew</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <interviewLabel>PrC Trigger Pushtopic from AgentWork {!$Flow.CurrentDateTime}</interviewLabel>
    <label>PrC Trigger Pushtopic from AgentWork</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Get the PC Case related to the AgentWork record</description>
        <name>Get_PC_Case</name>
        <label>Get PC Case</label>
        <locationX>314</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Related_WorkItem_is_a_PrC_Case</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Fail_to_Get_PC_Case</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WorkItemId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PC_Case__c</object>
        <sortField>Id</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_PC_Case</targetReference>
        </connector>
        <filterFormula>{!$Permission.DisableTriggersFlag}==false &amp;&amp; 
(ISPICKVAL({!$Record.Status}, &apos;Closed&apos;) || 
ISPICKVAL({!$Record.Status}, &apos;Canceled&apos;) || 
(ISPICKVAL({!$Record.Status}, &apos;Opened&apos;) &amp;&amp; ISCHANGED({!$Record.Status})))</filterFormula>
        <object>AgentWork</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>AW</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AgentWork</objectType>
    </variables>
</Flow>
