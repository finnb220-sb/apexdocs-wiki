name: Env-Determine-deployment-env
run-name: Determine deployment environment

on:
  workflow_call:
    inputs:
      original_event:
        required: true
        type: string
    outputs:
      AUTH_SECRET_NAME:
        description: "The first output string"
        value: ${{ jobs.DetermineDeploymentEnv.outputs.AuthSecretName }}

jobs:
  DetermineDeploymentEnv:
    name: Determine Deployment Environment
    runs-on: ubuntu-latest
    continue-on-error: true
    outputs:
      AuthSecretName: ${{ steps.determineDeploymentEnv.outputs.AuthSecretName }}
    steps:
      - name: Calculate Sit/Stage Environment v2.
        id: determineDeploymentEnv
        shell: bash
        run: |
          if [[ "${{ inputs.original_event }}" == "pull_request" ]]; then
            echo "This workflow was originally triggered by a Pull Request."
            TARGET_BRANCH=${{ github.event.pull_request.base.ref }}
          elif [[ "${{ inputs.original_event }}" == "push" ]]; then
            echo "This workflow was originally triggered by a push to a branch."
            TARGET_BRANCH=${{ github.event.ref }}
            TARGET_BRANCH=${TARGET_BRANCH##refs/heads/}
          else
            echo "This workflow was triggered by an unsupported event: ${{ inputs.original_event }}."
          fi
          
          echo "The target branch is $TARGET_BRANCH. Determining the deployment environment..."
          if [[ "$TARGET_BRANCH" =~ ^release/([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            VERSION="${BASH_REMATCH[1]}${BASH_REMATCH[2]}${BASH_REMATCH[3]}"
          elif [[ "$TARGET_BRANCH" =~ ^refs/heads/release/([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            VERSION="${BASH_REMATCH[1]}${BASH_REMATCH[2]}${BASH_REMATCH[3]}"
          else
            echo "Not a release branch. Exiting..."
            exit 0
          fi
          AUTH_SECRET_NAME="AUTH${VERSION}"
          echo "Using $AUTH_SECRET_NAME as the Secret Name"
          echo "AuthSecretName=$AUTH_SECRET_NAME" >> $GITHUB_OUTPUT
