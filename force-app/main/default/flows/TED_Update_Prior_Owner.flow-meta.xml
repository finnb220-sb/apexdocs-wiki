<?xml version="1.0" encoding="UTF-8" ?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>60.0</apiVersion>
    <customErrors>
        <name>Get_Prior_Owner_Error</name>
        <label>Get Prior Owner Error</label>
        <locationX>440</locationX>
        <locationY>395</locationY>
        <customErrorMessages>
            <errorMessage>{!$Flow.FaultMessage}</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <description>Updates the &quot;Prior Owner&quot; field on the case, with the most recent owner of the record.</description>
    <environments>Default</environments>
    <interviewLabel>TED Update Prior Owner {!$Flow.CurrentDateTime}</interviewLabel>
    <label>TED Update Prior Owner</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>This node searches for a user record based on the user Id in the Owner ID field of this record.</description>
        <name>Get_Prior_Owner</name>
        <label>Get Prior Owner</label>
        <locationX>176</locationX>
        <locationY>287</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Prior_Owner_Field</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Get_Prior_Owner_Error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.OwnerId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>This update records node does as it&apos;s label suggests.</description>
        <name>Update_Prior_Owner_Field</name>
        <label>Update Prior Owner Field</label>
        <locationX>176</locationX>
        <locationY>395</locationY>
        <inputAssignments>
            <field>Prior_Owner__c</field>
            <value>
                <elementReference>Get_Prior_Owner.Name</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Prior_Owner</targetReference>
        </connector>
        <filterFormula>AND(
ISCHANGED({!$Record.OwnerId}),
{!$Permission.DisableTriggersFlag} = FALSE,
CONTAINS({!$Record.RecordType.DeveloperName}, &apos;Tele_Urgent&apos;)
)</filterFormula>
        <object>Case</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>PriorOwner</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
